{"version":3,"sources":["assets/detail-bg2.png","lib/api.ts","redux/modules/user.ts","lib/storage.ts","components/Header/Header.tsx","components/Slider/Slider.tsx","components/Carousel/Carousel.tsx","components/Cards/Cards.tsx","components/Date/Date.tsx","components/Categories/Categories.tsx","components/FooterContent/FooterContent.tsx","components/SearchBar/SearchBar.tsx","redux/modules/review.ts","components/ReviewTextBox/ReviewTextBox.tsx","pages/HomePage.tsx","pages/AboutPage.tsx","redux/modules/base.ts","components/Auth/LoginBox.tsx","components/Auth/AuthContent.tsx","components/Auth/LabelInput.tsx","components/Auth/AuthButton.tsx","components/Auth/AlignedLink.tsx","components/Auth/AuthError.tsx","redux/modules/auth.ts","containers/Auth/Login.tsx","containers/Auth/Register.tsx","pages/LoginPage.tsx","pages/TestPage.tsx","redux/modules/detail.ts","containers/Detail/Detail.tsx","pages/DetailPage.tsx","redux/modules/perfume.ts","containers/Perfumes/Perfumes.tsx","pages/PerfumePage.tsx","pages/SurveyPage.tsx","pages/UserRank.tsx","App.tsx","Root.tsx","serviceWorker.ts","redux/modules/index.ts","index.tsx","redux/configureStore.ts"],"names":["module","exports","BASE_URL","axios","interceptors","request","use","config","console","log","error","Promise","reject","setLoggedInfo","createAction","setValidated","logout","checkStatus","initialState","Map","loggedInfo","token","user","logged","validated","handleActions","state","action","set","payload","pender","type","onSuccess","data","onFailure","storage","key","object","localStorage","JSON","stringify","get","parse","e","remove","removeItem","Header","handleLogout","a","props","UserActions","history","push","window","location","href","alignLinks","brand","className","to","id","menuIcon","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","this","onClick","getIn","Component","connect","dispatch","bindActionCreators","userActions","fullscreen","duration","height","indicators","interval","image","alt","src","placement","slidesPerPage","arrows","infinite","arrowLeft","Icon","arrowLeftDisabled","arrowRight","arrowRightDisabled","addArrowClickHandler","defaultField","name","launch_date","thumbnail","gender","availibility","brand_id","top_notes","heart_notes","base_notes","avg_rate","total_review","Cards","field","closeIcon","header","reveal","waves","revealIcon","s","toFixed","0","1","2","substr","length","slice","map","note","note_id","close","kor_name","placeholder","autoClose","container","defaultDate","disableDayFn","disableWeekends","events","firstDay","format","i18n","cancel","clear","done","months","monthsShort","nextMonth","previousMonth","weekdays","weekdaysAbbrev","weekdaysShort","isRTL","maxDate","minDate","onClose","onDraw","onOpen","onSelect","setDefaultDate","showClearBtn","showDaysInNextAndPreviousMonths","showMonthAfterYear","yearRange","multiple","onChange","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","coverTrigger","hover","value","disabled","changeInput","postReview","content","rate","post","headers","form","setIn","review_id","ReviewTextBox","size","gap","inactiveColor","activeColor","handleChange","ReviewActions","target","handleRate","handlePosting","toJS","then","r","alert","maxStars","node","review","reviewActions","HomePage","Button","large","copyrights","links","moreLinks","FooterContent","AboutPage","setHeaderVisibility","visible","Positioner","styled","div","ShadowedBox","LogoWrapper","Logo","Link","Contents","LoginBox","children","Title","AuthContent","title","Wrapper","Label","Input","input","LabelInput","label","rest","AuthButton","AuthButtonProps","Aligner","StyledLink","AlignedLink","transitions","shake","keyframes","AuthError","initializeForm","checkEmailExists","email","checkUsernameExists","username","setError","localRegister","password","localLogin","register","passwordConfirm","exists","login","result","initialForm","message","Login","AuthActions","handleLocalLogin","jwt","undefined","queryString","search","expired","auth","authActions","Register","validate","isEmail","isAlphanumeric","isLength","min","max","debounce","validation","indexOf","handleLocalRegister","response","status","LoginPageBackground","bg","LoginPage","path","component","BaseActions","baseActions","TestPage","width","accordion","popout","expanded","getPerfumeDetail","detail","availability","categories","seasons","Detail","initializeDetailInfo","DetailActions","perfume_id","pathname","split","Carousel","withRouter","detailActions","DetailPage","getPerfumeInfo","q","params","page","sort","category","include","exclude","perfumesList","num_pages","parseInt","Perfumes","initializePerfumeInfo","PerfumeActions","queryParams","handlePage","selectedPage","handleGender","selectedGender","pushState","prevProps","oldId","perfumes","GET_PERFUME_INFO","withGap","activePage","Number","items","leftBtn","rightBtn","maxButtons","perfume","m","l","xl","active","color","flashing","pending","perfumeActions","PerfumePage","SurveyPage","offLabel","onLabel","filledIn","UserRank","centered","striped","data-field","hoverable","App","initializeUserInfo","exact","Root","store","Boolean","hostname","match","combineReducers","base","penderReducer","createStore","modules","composeWithDevTools","applyMiddleware","penderMiddleware","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"6HAAAA,EAAOC,QAAU,IAA0B,wC,ilDCErCC,EAAW,iCACjBC,IAAMC,aAAaC,QAAQC,KACzB,SAAUC,GAER,OADAC,QAAQC,IAAIF,GACLA,KAET,SAAUG,GAER,OAAOC,QAAQC,OAAOF,MAGnB,I,mBCFMG,EAAgBC,YALL,wBAMXC,EAAeD,YALN,sBAMTE,EAASF,YALP,eDgBO,kBAAM,KCVfG,EAAcH,YALN,qBDcM,kBAAM,KCP3BI,EAAeC,YAAI,CACrBC,WAAYD,YAAI,CACZE,MAAO,WACPC,KAAM,OAEVC,QAAQ,EACRC,WAAW,IAGAC,cAAc,gCAnBL,wBAoBD,eAACC,EAAD,uDAASR,EAAcS,EAAvB,8CAAkCD,EAAME,IAAI,aAAcT,YAAIQ,EAAOE,UAAUD,IAAI,UAAU,MADxF,cAlBN,sBAoBD,SAACF,EAAqBC,GAAtB,OAAiCD,EAAME,IAAI,YAAaD,EAAOE,YAFxD,GAGrBC,iBAAO,CACNC,KApBa,oBAqBbC,UAAW,SAACN,EAAqBC,GAAtB,OAAiCD,EAAME,IAAI,aAAcT,YAAIQ,EAAOE,QAAQI,OAAOL,IAAI,aAAa,IAC/GM,UAAW,SAACR,EAAqBC,GAAtB,OAAiCT,MAEjDA,G,OCJYiB,EA5BC,CACZP,IAAK,SAACQ,EAAKC,GACFC,eACLA,aAAaF,GAA2B,kBAAZC,EAAuBA,EAASE,KAAKC,UAAUH,KAE/EI,IAAK,SAACL,GACF,IAAKE,aAAc,OAAO,KAE1B,IAAKA,aAAaF,GACd,OAAO,KAGX,IAEI,OADeG,KAAKG,MAAMJ,aAAaF,IAEzC,MAAOO,GACL,OAAOL,aAAaF,KAG5BQ,OAAQ,SAACR,GACL,IAAKE,aAAc,OAAO,KAEtBA,aAAaF,IACbE,aAAaO,WAAWT,K,eCT9BU,G,mNAEJC,a,sBAAe,gCAAAC,EAAA,+DACoB,EAAKC,MAA9BC,EADK,EACLA,YAAaC,EADR,EACQA,QADR,kBAGHD,EAAYlC,SAHT,OAIbmC,EAAQC,KAAK,KAJA,gDAMT5C,QAAQC,IAAR,MANS,QASb0B,EAAQS,OAAO,cACfS,OAAOC,SAASC,KAAO,IAVV,yD,uDAcd,OACD,kBAAC,SAAD,CACEC,WAAW,QACXC,MAAO,kBAAC,IAAD,CAAMC,UAAU,aAAaC,GAAG,KAAhC,gBACPC,GAAG,aACHC,SAAU,kBAAC,OAAD,aACVC,QAAS,CACPC,WAAW,EACXC,KAAM,OACNC,WAAY,IACZC,WAAY,KACZC,aAAc,KACdC,UAAW,KACXC,YAAa,KACbC,YAAa,IACbC,kBAAkB,IAGpB,kBAAC,IAAD,CAASZ,GAAE,yFAAX,WACA,kBAAC,IAAD,CAAMA,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,KAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACAa,KAAKvB,MAAM3B,KAAKmB,IAAI,UACjB,yBAAKgC,QAASD,KAAKzB,cACnByB,KAAKvB,MAAM3B,KAAKoD,MAAM,CAAC,aAAc,aADrC,IACmD,6DAEpD,kBAAC,IAAD,CAAMf,GAAG,eAAT,c,GA1CegB,cAoDNC,eACX,SAAClD,GAAD,MAAY,CACRJ,KAAMI,EAAMJ,SAEhB,SAACuD,GAAD,MAAe,CACX3B,YAAa4B,6BAAmBC,EAAaF,MALtCD,CAOb9B,GCpEa,G,OAAA,kBACd,kBAAC,SAAD,CACCkC,YAAY,EACZlB,QAAS,CACRmB,SAAU,IACVC,OAAQ,IACRC,YAAY,EACZC,SAAU,MAGX,kBAAC,QAAD,CAAOC,MAAO,yBAAKC,IAAI,GAAGC,IAAI,0GAC7B,kBAAC,UAAD,CAASC,UAAU,UAClB,yHAGA,wBAAI9B,UAAU,kCAAd,4EAKF,kBAAC,QAAD,CAAO2B,MAAO,yBAAKC,IAAI,GAAGC,IAAI,0GAC7B,kBAAC,UAAD,CAASC,UAAU,QAClB,+GAGA,wBAAI9B,UAAU,kCAAd,yHAKF,kBAAC,QAAD,CAAO2B,MAAO,yBAAKC,IAAI,GAAGC,IAAI,0GAC7B,kBAAC,UAAD,CAASC,UAAU,UAClB,sGAGA,wBAAI9B,UAAU,kCAAd,sGAKF,kBAAC,QAAD,CAAO2B,MAAO,yBAAKC,IAAI,GAAGC,IAAI,0GAC7B,kBAAC,UAAD,CAASC,UAAU,QAClB,+HAGA,wBAAI9B,UAAU,kCAAd,4F,2BC5CW,G,OAAA,kBACb,kBAAC,IAAD,CACA+B,cAAe,EACfC,QAAM,EACNC,UAAQ,EACRC,UAAW,kBAACC,EAAA,EAAD,4BACXC,kBAAmB,kBAACD,EAAA,EAAD,4BACnBE,WAAY,kBAACF,EAAA,EAAD,6BACZG,mBAAoB,kBAACH,EAAA,EAAD,6BACpBI,sBAAoB,GAEhB,yBAAKV,IAAI,uGACPD,IAAI,KACN,yBAAKC,IAAI,uGACPD,IAAI,KACN,yBAAKC,IAAI,uGACPD,IAAI,KACN,yBAAKC,IAAI,uGACPD,IAAI,KACN,yBAAKC,IAAI,uGACPD,IAAI,KACN,yBAAKC,IAAI,uGACPD,IAAI,KACN,yBAAKC,IAAI,uGACPD,IAAI,KACN,yBAAKC,IAAI,uGACPD,IAAI,QCFNY,G,OAAe,CACnBC,KAAM,SACNC,YAAa,SACbC,UAAW,SACXzC,GAAI,EACJ0C,OAAQ,EACRC,aAAc,SACdC,SAAU,SACVnB,MAAO,OACPoB,UAAW,CAAC,CAAEN,KAAM,WACpBO,YAAa,CAAC,CAAEP,KAAM,WACtBQ,WAAY,CAAC,CAAER,KAAM,WACrBS,SAAU,EACVC,aAAc,IAGD,SAASC,EAAT,GAA4D,IAAD,IAA1CC,aAA0C,MAAlCb,EAAkC,EAOxE,OACE,kBAAC,OAAD,CACEc,UAAW,kBAAC,OAAD,cACXC,OACE,kBAAC,YAAD,CAAW/B,OAAO,MAAMG,MAAO0B,EAAMV,WAAa,WAAYa,QAAM,EAACC,MAAM,UAE7ED,OAAQ,2HACRE,WAAY,kBAAC,OAAD,CAAM1D,UAAU,UAAhB,SAEZ,6BACE,yBAAKA,UAAU,qBACf,kBAAC,MAAD,KACE,kBAAC,MAAD,CAAK2D,EAAG,GACN,uBAAG3D,UAAU,cAAcqD,EAAMZ,OAEnC,kBAAC,MAAD,CAAKkB,EAAG,GACN,uBAAG3D,UAAU,kBAAiB,kBAAC,OAAD,CAAMA,UAAU,iBAAhB,QAA4CqD,EAAMH,SAASU,QAAQ,MAGrG,kBAAC,MAAD,CAAK5D,UAAU,oBACb,kBAAC,MAAD,CAAKA,UAAU,oBACb,kBAAC,OAAD,WACA,8BA5BU,CAClB6D,EAAG,OACHC,EAAG,SACHC,EAAG,mBAyBwBV,EAAMT,UAE3B,kBAAC,QAAD,CAAO5C,UAAU,4BACdqD,EAAMX,YACHW,EAAMX,YAAYsB,OAAO,EAAG,GAC5B,SAHN,wBAOF,kBAAC,MAAD,CAAKhE,UAAU,aACZqD,EAAMN,UAAUkB,OAAS,EACxBZ,EAAMN,UAAUmB,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAAP,OAC9B,kBAAC,OAAD,CACEC,OAAO,EACPlE,QAAS,KACT1B,IAAK2F,EACLrE,UAAU,cAEToE,EAAKG,UAAYH,EAAK3B,SAI3B,kBAAC,OAAD,CAAM6B,OAAO,GAAb,0CAIJ,kBAAC,IAAD,CAAMrE,GAAE,kBAAaoD,EAAMnD,KACzB,kBAAC,MAAD,CAAKF,UAAU,mBACb,uDACA,uBAAGA,UAAU,QACX,kBAAC,OAAD,wBAEF,4CAAQqD,EAAMF,aAAd,S,WCvGG,oBACf,kBAAC,aAAD,CACEjD,GAAG,eACHsE,YAAY,kBACZpE,QAAS,CACPqE,WAAW,EACXC,UAAW,KACXC,YAAa,KACbC,aAAc,KACdC,iBAAiB,EACjBC,OAAQ,GACRC,SAAU,EACVC,OAAQ,eACRC,KAAM,CACJC,OAAQ,SACRC,MAAO,QACPC,KAAM,KACNC,OAAQ,CACN,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEFC,YAAa,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,UAAW,SACXC,cAAe,SACfC,SAAU,CACR,SACA,SACA,UACA,YACA,WACA,SACA,YAEFC,eAAgB,CACd,IACA,IACA,IACA,IACA,IACA,IACA,KAEFC,cAAe,CACb,MACA,MACA,MACA,MACA,MACA,MACA,QAGJC,OAAO,EACPC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,OAAQ,KACRC,SAAU,KACVlH,MAAO,KACPmH,gBAAgB,EAChBC,cAAc,EACdC,iCAAiC,EACjCC,oBAAoB,EACpBC,UAAW,QCxFA,G,OAAA,kBACb,kBAAC,SAAD,CACArG,GAAG,WACHsG,UAAU,EACVC,SAAU,aACVrG,QAAS,CACPsG,QAAS,GACTC,gBAAiB,CACfC,UAAW,OACXC,aAAa,EACbC,cAAc,EACdC,gBAAgB,EAChBC,cAAc,EACdC,OAAO,EACP1G,WAAY,IACZC,WAAY,KACZC,aAAc,KACdC,UAAW,KACXC,YAAa,KACbC,YAAa,MAGjBsG,MAAM,IAEN,4BACEC,UAAQ,EACRD,MAAM,IAFR,mBAMA,4BAAQA,MAAM,KAAd,UAGA,4BAAQA,MAAM,KAAd,SAGA,4BAAQA,MAAM,KAAd,UAGA,4BAAQA,MAAM,KAAd,YAGA,4BAAQA,MAAM,KAAd,gBC3Ca,I,OCSwBjG,YDTxB,kBACb,6BACU,wBAAIjB,UAAU,cAAd,qCAGF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wBACb,kBAAC,OAAD,aACA,oDAEF,yBAAKA,UAAU,wBACb,kBAAC,OAAD,aACA,oDAEF,yBAAKA,UAAU,wBACb,kBAAC,OAAD,aACA,oDAEF,yBAAKA,UAAU,wBACb,kBAAC,OAAD,aACA,oDAEF,yBAAKA,UAAU,wBACb,kBAAC,OAAD,aACA,wDEnBDoH,GAAchK,YAHN,uBAIRiK,GAAajK,YAHN,eXqCM,SAACkK,EAAiBC,EAAcrH,EAAYvC,GAA5C,OACxBlB,IAAM+K,KAAN,UACKhL,EADL,qBAC0B0D,EAD1B,aAEE,CAACoH,QAASA,EAASC,KAAMA,GACzB,CAAEE,QAAS,CAAE,MAAS9J,QWpCpBH,GAAeC,YAAI,CACvBiK,KAAMjK,YAAI,CACR6J,QAAS,GACTC,KAAM,MAMKxJ,eAAc,2BAfR,uBAgBD,WAAmC,IAAlCC,EAAiC,uDAAzBR,GAAcS,EAAW,yCAChBA,EAAOE,QAA7BuJ,EADsC,EACtCA,KAAMjF,EADgC,EAChCA,KAAMyE,EAD0B,EAC1BA,MACpB,OAAOlJ,EAAM2J,MAAM,CAACD,EAAMjF,GAAOyE,MAElC9I,iBAAO,CACNC,KApBY,cAqBZC,UAAW,eAACN,EAAD,uDAASR,GAAcS,EAAvB,8CAAkCD,EAAME,IAAI,YAAaD,EAAOE,QAAQyJ,eAExFpK,I,UCfGqK,G,4MACJ7J,MAAQ,CACN8J,KAAM,OACNC,IAAK,MACLC,cAAe,0BACfC,YAAa,sB,EAEfC,aAAe,SAACjJ,GAAO,IACbkJ,EAAkB,EAAK5I,MAAvB4I,cADY,EAEIlJ,EAAEmJ,OAAlBlB,EAFY,EAEZA,MAAOzE,EAFK,EAELA,KACf0F,EAAcf,YAAY,CACxB3E,OACAyE,QACAQ,KAAM,U,EAGVW,WAAa,SAACd,GAAU,IAGhBL,EAAQK,EAFU,EAAKhI,MAAtB4I,cAGOf,YAAY,CACxB3E,KAHW,OAIXyE,QACAQ,KAAM,U,EAGVY,c,sBAAgB,0CAAAhJ,EAAA,+DAC6B,EAAKC,MAAxCmI,EADM,EACNA,KAAMS,EADA,EACAA,cAAejI,EADf,EACeA,GAAIvC,EADnB,EACmBA,MADnB,EAEY+J,EAAKa,OAAvBjB,EAFM,EAENA,QAASC,EAFH,EAEGA,KAFH,kBAIJY,EAAcd,WAAWC,EAASC,EAAMrH,EAAIvC,GACjD6K,MAAK,SAAAC,GACJC,MAAM,oEANE,uDAUVA,MAAM,EAAD,IAVK,yD,uDAcN,IAAD,EACmB5H,KAAKvB,MAAMmI,KAAKa,OAAlCjB,EADD,EACCA,QAASC,EADV,EACUA,KACjB,OACE,yBAAKvH,UAAU,iBACb,yBAAKA,UAAU,eACb,kBAAC,OAAD,aACA,8BAAUyC,KAAK,UAAUvC,GAAG,sBAAsBuG,SAAU3F,KAAKoH,aAAchB,MAAOI,KAExF,yBAAKtH,UAAU,cACf,kBAAC,KAAD,CACEkH,MAAOK,EACPO,KAAMhH,KAAK9C,MAAM8J,KACjBC,IAAKjH,KAAK9C,MAAM+J,IAChBY,SAAU,GACVX,cAAelH,KAAK9C,MAAMgK,cAC1BC,YAAanH,KAAK9C,MAAMiK,YACxBxB,SAAU3F,KAAKuH,aAEf,kBAAC,SAAD,CAAQO,KAAK,SAASnF,MAAM,QAAQ1C,QAASD,KAAKwH,eAAlD,gB,GA1DkBrH,aAmEbC,gBACb,SAAClD,GAAD,MAAY,CACV0J,KAAM1J,EAAM6K,OAAO9J,IAAI,QACvBpB,MAAOK,EAAMJ,KAAKoD,MAAM,CAAC,aAAc,cAEzC,SAACG,GAAD,MAAe,CACbgH,cAAe/G,6BAAmB0H,EAAe3H,MANtCD,CAQb2G,I,kBC5BakB,OArDf,WACA,OACA,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MAGA,yBAAK/I,UAAU,yBACb,kBAACgJ,GAAA,EAAD,KACE,kBAAC,IAAD,CAAM/I,GAAG,SAAT,eAIJ,yBAAKD,UAAU,8BACb,yBAAKA,UAAU,wBAAuB,wCACtC,kBAAC,MAAD,KACE,kBAAC,MAAD,CAAKA,UAAU,YAAY2D,EAAG,GAC9B,kBAAC,OAAD,CAAMsF,OAAK,GAAX,aACA,wCACA,qUAGA,kBAAC,MAAD,CAAKjJ,UAAU,YAAY2D,EAAG,GAC9B,kBAAC,OAAD,CAAMsF,OAAK,GAAX,WACA,2CACA,kJAGA,kBAAC,MAAD,CAAKjJ,UAAU,YAAY2D,EAAG,GAC9B,kBAAC,OAAD,CAAMsF,OAAK,GAAX,yBACA,yCACA,2IAKJ,kBAAC,SAAD,CAAQC,WAAW,qBAAqBC,MAAO,4BAC7C,4BAAI,uBAAGnJ,UAAU,2BAA2BH,KAAK,MAA7C,WACJ,4BAAI,uBAAGG,UAAU,2BAA2BH,KAAK,MAA7C,UACJ,4BAAI,uBAAGG,UAAU,2BAA2BH,KAAK,MAA7C,oBACJ,4BAAI,uBAAGG,UAAU,2BAA2BH,KAAK,MAA7C,qBAEJuJ,UAAW,uBAAGpJ,UAAU,iCACtBH,KAAK,uEACL,kBAAC,OAAD,+BAFS,8BAKX,kBAACwJ,GAAD,SC7CWC,OARf,WACE,OACE,6BACI,+F,SCAKC,GAAsBnM,YAFL,8BAIxBI,GAAeC,YAAI,CACrB8F,OAAQ9F,YAAI,CACR+L,SAAS,MAIFzL,eAAc,eAVC,8BAWD,SAACC,EAAOC,GAAR,OAAmBD,EAAM2J,MAAM,CAAC,SAAU,WAAY1J,EAAOE,YACvFX,I,ojCCTH,IAAMiM,GAAaC,KAAOC,IAAV,MASVC,GAAcF,KAAOC,IAAV,MAQXE,GAAcH,KAAOC,IAAV,MAUXG,GAAOJ,aAAOK,IAAPL,CAAH,MAOJM,GAAWN,KAAOC,IAAV,MAqBCM,GAbE,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,kBAACT,GAAD,KACI,kBAACG,GAAD,KACI,kBAACC,GAAD,KACI,kBAACC,GAAD,CAAM7J,GAAG,KAAI,6CAEjB,kBAAC+J,GAAD,KACKE,M,wKCpDjB,IAAMC,GAAQT,KAAOC,IAAV,MAcIS,GAPK,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOH,EAAT,EAASA,SAAT,OAChB,6BACI,kBAACC,GAAD,KAAQE,GACPH,I,onBCTT,IAAMI,GAAUZ,KAAOC,IAAV,MAMPY,GAAQb,KAAOC,IAAV,MAOLa,GAAQd,KAAOe,MAAV,MAqBIC,GAPI,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAUC,EAAZ,iCACf,kBAACN,GAAD,KACI,kBAACC,GAAD,KAAQI,GACR,kBAACH,GAAUI,K,svBC/BnB,IAAMN,GAAUZ,KAAOC,IAAV,MA8CEkB,GANI,SAACC,GAAD,OACf,kBAAC,GAAD,CAAS/J,QAAS+J,EAAgB/J,SAC7B+J,EAAgBZ,W,oQCzCzB,IAAMa,GAAUrB,KAAOC,IAAV,MAKPqB,GAAatB,aAAOK,IAAPL,CAAH,MAaDuB,GANK,SAAC,GAAD,IAAEhL,EAAF,EAAEA,GAAIiK,EAAN,EAAMA,SAAN,OAChB,kBAACa,GAAD,KACI,kBAACC,GAAD,CAAY/K,GAAIA,GAAKiK,K,2nBCd7B,IAAMgB,GAAc,CAClBC,MAAOC,aAAF,OAkBDd,GAAUZ,KAAOC,IAAV,KAMIuB,GAAYC,OAUdE,GANG,SAAC,GAAD,IAAGnB,EAAH,EAAGA,SAAH,OAChB,kBAAC,GAAD,KACGA,I,qBCrBQ9C,GAAchK,YATN,qBAURkO,GAAiBlO,YATN,wBAUXmO,GAAmBnO,YATL,2BtBMK,SAACoO,GAAD,OAC9B/O,IAAMsC,IAAI,UAAGvC,EAAH,2BAAuCgP,EAAQ,QsBG9CC,GAAsBrO,YATL,8BtBOK,SAACsO,GAAD,OACjCjP,IAAMsC,IAAI,oBAAsB2M,MsBErBC,GAAWvO,YATN,kBAULwO,GAAgBxO,YATN,uBtBQM,SAAC,GAAD,IAAGoO,EAAH,EAAGA,MAAOE,EAAV,EAAUA,SAAUG,EAApB,EAAoBA,SAApB,OAC3BpP,IAAM+K,KAAN,UAAchL,EAAd,mBAAyC,CAAEgP,QAAOE,WAAUG,gBsBCjDC,GAAa1O,YATN,oBtBSM,SAAC,GAAD,IAAGoO,EAAH,EAAGA,MAAOK,EAAV,EAAUA,SAAV,OACxBpP,IAAM+K,KAAN,UAAchL,EAAd,oBAA0C,CAAEgP,QAAOK,gBsBG/CrO,GAAeC,YAAI,CACrBsO,SAAUtO,YAAI,CACViK,KAAMjK,YAAI,CACN+N,MAAO,GACPE,SAAU,GACVG,SAAU,GACVG,gBAAiB,KAErBC,OAAQxO,YAAI,CACR+N,OAAO,EACPK,UAAU,IAEd7O,MAAO,OAEXkP,MAAOzO,YAAI,CACPiK,KAAMjK,YAAI,CACN+N,MAAO,GACPK,SAAU,KAEd7O,MAAO,OAEXmP,OAAQ1O,YAAI,MAIDM,eAAc,2BA5CR,qBA6CD,SAACC,EAAqBC,GAAY,IAAD,EACfA,EAAOE,QAA7BuJ,EADqC,EACrCA,KAAMjF,EAD+B,EAC/BA,KAAMyE,EADyB,EACzBA,MACpB,OAAOlJ,EAAM2J,MAAM,CAACD,EAAM,OAAQjF,GAAOyE,MAE1C9I,iBAAO,CACNC,KAhDmB,0BAiDnBC,UAAW,eAACN,EAAD,uDAASR,GAAcS,EAAvB,8CAAkCD,EAAM2J,MAAM,CAAC,WAAY,SAAU,SAAU1J,EAAOE,QAAQI,KAAK0N,WAP1F,eA3CJ,wBAoDD,SAACjO,EAAqBC,GACrC,IAAMmO,EAAc5O,GAAauB,IAAId,EAAOE,SAC5C,OAAOH,EAAME,IAAID,EAAOE,QAASiO,MAElChO,iBAAO,CACNC,KAvDsB,6BAwDtBC,UAAW,SAACN,EAAqBC,GAAtB,OAAiCD,EAAM2J,MAAM,CAAC,WAAY,SAAU,YAAa1J,EAAOE,QAAQI,KAAK0N,WAf5F,eAxCV,kBAyDD,SAACjO,EAAqBC,GAAY,IAAD,EAChBA,EAAOE,QAAzBuJ,EADkC,EAClCA,KAAM2E,EAD4B,EAC5BA,QACd,OAAOrO,EAAM2J,MAAM,CAACD,EAAM,SAAU2E,MAErCjO,iBAAO,CACNC,KA5DY,mBA6DZC,UAAW,eAACN,EAAD,uDAASR,GAAcS,EAAvB,8CAAkCD,EAAME,IAAI,SAAUT,YAAIQ,EAAOE,QAAQI,UAvBhE,GAyBrBH,iBAAO,CACNC,KAjEe,sBAkEfC,UAAW,eAACN,EAAD,uDAASR,GAAcS,EAAvB,8CAAkCD,EAAME,IAAI,SAAUT,YAAIQ,EAAOE,QAAQI,WAEzFf,I,oBCvDG8O,G,4MAEFpE,aAAe,SAACjJ,GAAO,IACXsN,EAAgB,EAAKhN,MAArBgN,YADU,EAEMtN,EAAEmJ,OAAlB3F,EAFU,EAEVA,KAAMyE,EAFI,EAEJA,MAEdqF,EAAYnF,YAAY,CACpB3E,OACAyE,QACAQ,KAAM,W,EAiBdiE,SAAW,SAACU,GAMR,OALwB,EAAK9M,MAArBgN,YACIZ,SAAS,CACjBjE,KAAM,QACN2E,aAEG,G,EAIXG,iB,sBAAmB,0CAAAlN,EAAA,+DACqC,EAAKC,MAAjDmI,EADO,EACPA,KAAM6E,EADC,EACDA,YAAa/M,EADZ,EACYA,YAAaC,EADzB,EACyBA,QADzB,EAEaiI,EAAKa,OAAzBiD,EAFO,EAEPA,MAAOK,EAFA,EAEAA,SAFA,kBAKLU,EAAYT,WAAW,CAAEN,QAAOK,aACrCrD,MAAK,SAAAC,GACF,IAAM9K,EAAQ8K,EAAElK,KAAKZ,MAEfD,EADO+O,KAAI9O,GAEjBD,EAAWC,MAAQA,EACnB6B,EAAYrC,cAAcO,GAC1B+B,EAAQC,KAAK,KACbjB,EAAQP,IAAI,aAAcR,MAbnB,uDAmBXZ,QAAQC,IAAR,MACA,EAAK4O,SAAS,kEApBH,yD,kEAvBE,IACT/L,EAAakB,KAAKvB,MAAlBK,cAGc8M,IAFRC,KAAY3N,MAAMY,EAASgN,QAE/BC,SACN/L,KAAK6K,SAAS,uH,6CAIM7K,KAAKvB,MAArBgN,YACIjB,eAAe,W,+BAoCrB,IAAD,EACuBxK,KAAKvB,MAAMmI,KAAKa,OAApCiD,EADH,EACGA,MAAOK,EADV,EACUA,SACP3D,EAAmCpH,KAAnCoH,aAAcsE,EAAqB1L,KAArB0L,iBACdxP,EAAU8D,KAAKvB,MAAfvC,MAER,OACI,kBAAC,GAAD,CAAaqN,MAAM,SACf,kBAAC,GAAD,CACIM,MAAM,qBACNlI,KAAK,QACL+B,YAAY,oBACZ0C,MAAOsE,EACP/E,SAAUyB,IACd,kBAAC,GAAD,CACIyC,MAAM,2BACNlI,KAAK,WACL+B,YAAY,YACZnG,KAAK,WACL6I,MAAO2E,EACPpF,SAAUyB,IAEVlL,GAAS,kBAAC,GAAD,KAAYA,GAEzB,kBAAC,GAAD,CAAY+D,QAASyL,GAArB,UACA,kBAAC,GAAD,CAAavM,GAAG,kBAAhB,iC,GAnFIgB,aAyFLC,gBACX,SAAClD,GAAD,MAAY,CACR0J,KAAM1J,EAAM8O,KAAK9L,MAAM,CAAC,QAAS,SACjChE,MAAOgB,EAAM8O,KAAK9L,MAAM,CAAC,QAAS,UAClCmL,OAAQnO,EAAM8O,KAAK/N,IAAI,cAE3B,SAACoC,GAAD,MAAe,CACXoL,YAAanL,6BAAmB2L,EAAa5L,GAC7C3B,YAAa4B,6BAAmBC,EAAaF,MARtCD,CAUboL,I,sCCnGIU,G,4MAEFrB,SAAW,SAACU,GACY,EAAK9M,MAAMgN,YACnBZ,SAAS,CACjBjE,KAAM,WACN2E,a,EAIRY,SAAW,CACPzB,MAAO,SAACtE,GACJ,QAAKgG,mBAAQhG,KACT,EAAKyE,SAAS,2EACP,IAIfD,SAAU,SAACxE,GACP,SAAKiG,0BAAejG,KAAWkG,oBAASlG,EAAO,CAAEmG,IAAK,EAAGC,IAAK,QAC1D,EAAK3B,SAAS,qJACP,IAIfE,SAAU,SAAC3E,GACP,OAAKkG,oBAASlG,EAAO,CAAEmG,IAAK,KAI5B,EAAK1B,SAAS,OACP,IAJH,EAAKA,SAAS,wFACP,IAKfK,gBAAiB,SAAC9E,GACd,OAAI,EAAK3H,MAAMmI,KAAK3I,IAAI,cAAgBmI,GACpC,EAAKyE,SAAS,kGACP,IAEX,EAAKA,SAAS,OACP,K,EAGfJ,iBAAmBgC,KAAQ,uCAAC,WAAO/B,GAAP,eAAAlM,EAAA,6DAChBiN,EAAgB,EAAKhN,MAArBgN,YADgB,kBAGdA,EAAYhB,iBAAiBC,GAHf,OAIhB,EAAKjM,MAAM0M,OAAOlN,IAAI,SACtB,EAAK4M,SAAS,+EAEd,EAAKA,SAAS,MAPE,gDAUpB7O,QAAQC,IAAR,MAVoB,yDAAD,sDAYxB,K,EAEH0O,oBAAsB8B,KAAQ,uCAAC,WAAO7B,GAAP,eAAApM,EAAA,6DACnBiN,EAAgB,EAAKhN,MAArBgN,YADmB,kBAGjBA,EAAYd,oBAAoBC,GAHf,OAInB,EAAKnM,MAAM0M,OAAOlN,IAAI,YACtB,EAAK4M,SAAS,+EAEd,EAAKA,SAAS,MAPK,gDAUvB7O,QAAQC,IAAR,MAVuB,yDAAD,sDAY3B,K,EAEHmL,aAAe,SAACjJ,GAAO,IACXsN,EAAgB,EAAKhN,MAArBgN,YADU,EAEMtN,EAAEmJ,OAAlB3F,EAFU,EAEVA,KAAMyE,EAFI,EAEJA,MAEdqF,EAAYnF,YAAY,CACpB3E,OACAyE,QACAQ,KAAM,aAGV,IAAM8F,EAAa,EAAKP,SAASxK,GAAMyE,GACnCzE,EAAKgL,QAAQ,aAAe,IAAMD,IAGf,UAAT/K,EAAmB,EAAK8I,iBAAmB,EAAKE,qBACxDvE,I,EAOVwG,oB,sBAAsB,0DAAApO,EAAA,2DACyC,EAAKC,MAAxDmI,EADU,EACVA,KAAM6E,EADI,EACJA,YAAa/M,EADT,EACSA,YAAaxC,EADtB,EACsBA,MAAOyC,EAD7B,EAC6BA,QAD7B,EAEqCiI,EAAKa,OAApDiD,EAFU,EAEVA,MAAOE,EAFG,EAEHA,SAAUG,EAFP,EAEOA,SAAUG,EAFjB,EAEiBA,gBAFjB,kBAIViB,EAJU,EAIVA,UAELjQ,EANe,oDAOdiQ,EAAQ,MAAUzB,IACdyB,EAAQ,SAAavB,IACrBuB,EAAQ,SAAapB,IACrBoB,EAAQ,gBAAoBjB,GAVlB,2EAgBRO,EAAYX,cAAc,CAC5BJ,QAAOE,WAAUG,aAjBP,QAmBRnO,EAAa,EAAK6B,MAAM4M,OAAO5D,OAErC9J,EAAQP,IAAI,aAAcR,GAC1B8B,EAAYrC,cAAcO,GAC1B8B,EAAYnC,cAAa,GACzBoC,EAAQC,KAAK,UAxBC,qDA2BW,MAAtB,KAAEiO,SAASC,OA3BA,wBA4BFlP,EAAQ,KAAEiP,SAASpP,KAAnBG,IACF2N,EAAkB,UAAR3N,EAAkB,8EAAoB,8EA7B5C,kBA8BH,EAAKiN,SAASU,IA9BX,QAgCd,EAAKV,SAAS,uFAhCA,0D,qEAHM7K,KAAKvB,MAArBgN,YACIjB,eAAe,c,+BAqCrB,IACEtO,EAAU8D,KAAKvB,MAAfvC,MADH,EAEkD8D,KAAKvB,MAAMmI,KAAKa,OAA/DiD,EAFH,EAEGA,MAAOE,EAFV,EAEUA,SAAUG,EAFpB,EAEoBA,SAAUG,EAF9B,EAE8BA,gBAC3B9D,EAAiBpH,KAAjBoH,aACR,OACI,kBAAC,GAAD,CAAamC,MAAM,4BACf,kBAAC,GAAD,CACIM,MAAM,kCACNlI,KAAK,QACL+B,YAAY,0BACZ0C,MAAOsE,EAAO/E,SAAUyB,IAC5B,kBAAC,GAAD,CACIyC,MAAM,eACNlI,KAAK,WACL+B,YAAY,cACZ0C,MAAOwE,EACPjF,SAAUyB,IACd,kBAAC,GAAD,CACIyC,MAAM,2BACNlI,KAAK,WACL+B,YAAY,SACZnG,KAAK,WACL6I,MAAO2E,EACPpF,SAAUyB,IACd,kBAAC,GAAD,CACIyC,MAAM,wCACNlI,KAAK,kBACL+B,YAAY,SACZnG,KAAK,WACL6I,MAAO8E,EACPvF,SAAUyB,IAEVlL,GAAS,kBAAC,GAAD,KAAYA,GAEzB,kBAAC,GAAD,CAAY+D,QAASD,KAAK4M,qBAA1B,4BACA,kBAAC,GAAD,CAAazN,GAAG,eAAhB,2B,GAlKOgB,aAwKRC,gBACX,SAAClD,GAAD,MAAY,CACR0J,KAAM1J,EAAM8O,KAAK9L,MAAM,CAAC,WAAY,SACpChE,MAAOgB,EAAM8O,KAAK9L,MAAM,CAAC,WAAY,UACrCiL,OAAQjO,EAAM8O,KAAK9L,MAAM,CAAC,WAAY,WACtCmL,OAAQnO,EAAM8O,KAAK/N,IAAI,cAE3B,SAACoC,GAAD,MAAe,CACXoL,YAAanL,6BAAmB2L,EAAa5L,GAC7C3B,YAAa4B,6BAAmBC,EAAaF,MATtCD,CAWb8L,I,6NChMF,IAAMa,GAAsBnE,KAAOC,IAAV,KAGCmE,MAKpBC,G,uKAEE,OACE,kBAACF,GAAD,KACE,kBAAC,GAAD,KACI,kBAAC,IAAD,CAAOG,KAAK,cAAcC,UAAW3B,KACrC,kBAAC,IAAD,CAAO0B,KAAK,iBAAiBC,UAAWjB,W,GANhC/L,aAaTC,gBACX,SAAClD,GAAD,MAAY,MAGZ,SAACmD,GAAD,MAAe,CACX+M,YAAa9M,6BAAmB+M,EAAahN,MALtCD,CAOb6M,I,OC0CaK,OA1Ef,WACA,OACA,6BACE,kBAAC,EAAD,MACA,yBAAKpO,UAAU,sBAIb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,cAAf,SAIF,yBAAKA,UAAU,gBAAf,wBACuB,6BADvB,2BAQJ,yBAAKA,UAAU,eACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAK6B,IAAI,uGACTD,IAAI,GACJyM,MAAM,WACN,yBAAKxM,IAAI,uGACTD,IAAI,GACJyM,MAAM,WACN,yBAAKxM,IAAI,uGACTD,IAAI,GACJyM,MAAM,aAIV,yBAAKrO,UAAU,oBACb,kBAAC,cAAD,CAAasO,WAAS,EAACC,QAAM,GAC3B,kBAAC,kBAAD,CAAiBC,UAAU,EAAOjL,OAAO,qHAAgCqF,KAAK,OAA9E,yrBAMA,kBAAC,kBAAD,CAAiB4F,UAAU,EAAOjL,OAAO,8GAA8BqF,KAAK,OAA5E,qwBAUA,kBAAC,kBAAD,CAAiB4F,UAAU,EAAOjL,OAAO,mJAAqCqF,KAAK,OAAnF,2VCxDC6F,GAAmBrR,YAFb,qB3BkCa,SAAC8C,GAAD,OAC9BzD,IAAMsC,IAAN,UAAavC,EAAb,qBAAkC0D,O2B/B9B1C,GAAeC,YAAI,CACvBiR,OAAQ,CACNxO,GAAI,SACJgD,SAAU,GACVH,UAAW,CACT,CAAE7C,GAAI,IAAKuC,KAAM,SAAU8B,SAAU,gBACrC,CAAErE,GAAI,IAAKuC,KAAM,WAAY8B,SAAU,4BACvC,CAAErE,GAAI,IAAKuC,KAAM,WAAY8B,SAAU,4BACvC,CAAErE,GAAI,IAAKuC,KAAM,OAAQ8B,SAAU,gBACnC,CAAErE,GAAI,IAAKuC,KAAM,SAAU8B,SAAU,sBACrC,CAAErE,GAAI,IAAKuC,KAAM,OAAQ8B,SAAU,gBACnC,CAAErE,GAAI,IAAKuC,KAAM,WAAY8B,SAAU,6BAEzCvB,YAAa,GACbC,WAAY,GACZE,aAAc,EACdpD,MAAO,CAAEG,GAAI,EAAGuC,KAAM,mBACtBA,KAAM,kCACNC,YAAa,aACbC,UAAW,iEACXC,OAAQ,EACR+L,cAAc,EACdC,WAAY,GACZC,QAAS,MAIE9Q,eAAc,eAEtBK,iBAAO,CACRC,KAlCa,oBAmCbC,UAAW,WAAmC,IAAlCN,EAAiC,uDAAzBR,GAAcS,EAAW,uCAC3C,OAAOD,EAAME,IAAI,SAAUD,EAAOE,QAAQI,UAIhDf,IC7BIsR,I,mNACJC,qB,sBAAuB,kCAAAzP,EAAA,+DACc,EAAKC,MAAhCyP,EADa,EACbA,cAAevP,EADF,EACEA,QACjBwP,EAAaxP,EAAQG,SAASsP,SAASC,MAAM,KAAK,GAFnC,SAGfH,EAAcP,iBAAiBQ,GAHhB,2C,mEAOrBnO,KAAKiO,yB,+BAGG,IACAL,EAAW5N,KAAKvB,MAAhBmP,OACR,OACE,yBAAK1O,UAAU,wBACb,yBAAKA,UAAU,cAEb,yBAAKA,UAAU,YAErB,yBAAKA,UAAU,iBAAiB0O,EAAO3O,MAAM0C,MAErC,yBACEZ,IAAK6M,EAAO/L,UACZf,IAAI,KAIN,yBAAK5B,UAAU,QACb,kBAAC,OAAD,mBAMJ,yBAAKA,UAAU,gBAEb,yBAAKA,UAAU,cACZ0O,EAAOxO,GADV,MACiBwO,EAAOhM,aAExB,yBAAK1C,UAAU,gBACZ0O,EAAOjM,MAYV,yBAAKzC,UAAU,eACb,yBAAKA,UAAU,WAAf,QAIF,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,+CACA,6BACA,yBACE6B,IAAI,uGACJD,IAAI,KAEN,yBACEC,IAAI,uGACJD,IAAI,MAGR,yBAAK5B,UAAU,WACb,uCACA,yBAAKA,UAAU,YAAf,SACQ,6BADR,WAKF,yBAAKA,UAAU,WACb,0CACA,yBAAKA,UAAU,eAAf,iBAOR,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cAAf,UAGF,yBAAKA,UAAU,SACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,OACb,kCACA,6BACA,yBAAKA,UAAU,aAAf,uBAEF,yBAAKA,UAAU,SACb,oCACA,6BACA,yBAAKA,UAAU,aAAf,kCAEF,yBAAKA,UAAU,QACb,mCACA,6BACA,yBAAKA,UAAU,aAAf,qBAIJ,yBAAKA,UAAU,YACb,yBACE6B,IAAI,uGACJD,IAAI,QAOZ,yBAAK5B,UAAU,gBACf,yBAAKA,UAAU,kBAAf,sBACA,yBAAKA,UAAU,iBACb,kBAACoP,EAAD,OAIF,yBAAKpP,UAAU,cACb,yBAAKA,UAAU,gBAAf,WACA,kBAAC,GAAD,CAAeE,GAAI,iB,GAjIRe,cAwINoO,eACbnO,aACE,SAAClD,GAAD,MAAY,CACV0Q,OAAQ1Q,EAAM0Q,OAAO3P,IAAI,cAE3B,SAACoC,GAAD,MAAe,CACb6N,cAAe5N,6BAAmBkO,EAAenO,MALrDD,CAOE4N,KClJWS,OATf,WACA,OACA,yBAAKvP,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,GAAD,QCEWwP,GAAiBpS,YAJL,oB9BoBE,SAACqS,GAAD,OACzBhT,IAAMsC,IAAN,UAAavC,EAAb,cAAmC,CACjCkT,OAAQ,CACNC,KAAMF,EAAEE,KACRC,KAAMH,EAAEG,KACRC,SAAUJ,EAAEI,SACZjN,OAAQ6M,EAAE7M,OACVkN,QAASL,EAAEK,QACXC,QAASN,EAAEM,QACXhQ,MAAO0P,EAAE1P,Y8BvBTvC,GAAeC,YAAI,CACvBuS,aAAc,GACdC,UAAW,IAGElS,eAAc,eACxBK,iBAAO,CACRC,KAbqB,mBAcrBC,UAAW,WAAmC,IAAlCN,EAAiC,uDAAzBR,GAAcS,EAAW,uCAC3C,OAAOD,EAAME,IAAI,eAAgBD,EAAOE,QAAQI,MAAML,IAAI,YAAagS,SAASjS,EAAOE,QAAQsJ,QAAQwI,gBAG1GzS,ICDG2S,G,4MACJC,sB,sBAAwB,kCAAA9Q,EAAA,+DACY,EAAKC,MAAjC8Q,EADgB,EAChBA,eAAgB5Q,EADA,EACAA,QAClB6Q,EAAc3D,KAAY3N,MAAMS,EAAQG,SAASgN,QAF/B,SAGlByD,EAAeb,eAAec,GAHZ,2C,EAkBxBC,WAAa,SAACC,GAAkB,IAAD,EACK,EAAKjR,MAAjCE,EADuB,EACvBA,QAAS4Q,EADc,EACdA,eACXC,EAAc3D,KAAY3N,MAAMS,EAAQG,SAASgN,QACvD0D,EAAYX,KAAOa,EACnBH,EAAeb,eAAec,I,EAE9BG,aAAe,SAACC,GAAoB,IAAD,EACC,EAAKnR,MAAjCE,EAD2B,EAC3BA,QAAS4Q,EADkB,EAClBA,eACXC,EAAc3D,KAAY3N,MAAMS,EAAQG,SAASgN,QACvD0D,EAAY1N,OAAS8N,EACrB/Q,OAAOF,QAAQkR,UAAU,GAAI,GAA7B,mBAA6ChE,KAAY7N,UAAUwR,KACnED,EAAeb,eAAec,I,kEAtB9BxP,KAAKsP,0B,yCAGcQ,GACnB,IAAIC,EAAQD,EAAUnR,QAAQG,SAASgN,OAC3B9L,KAAKvB,MAAME,QAAQG,SAASgN,SAC1BiE,GACd/P,KAAKsP,0B,+BAiBK,IAAD,OACDU,EAAahQ,KAAKvB,MAAlBuR,SACAC,EAAqBjQ,KAAKvB,MAAMnB,OAAhC2S,iBAFC,EAWLpE,KAAY3N,MAAMW,OAAOC,SAASgN,QAPtC+C,EAJS,EAITA,KACAC,EALS,EAKTA,KACA7P,EANS,EAMTA,MACA8P,EAPS,EAOTA,SACAE,EARS,EAQTA,QACAD,EATS,EASTA,QACAlN,EAVS,EAUTA,OAEA,OACA,yBAAK5C,UAAU,aACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,oBACb,kBAAC,MAAD,CAAKA,UAAU,cACb,kBAAC,MAAD,KACA,kBAAC,aAAD,CAAY2K,MAAM,eAAelI,KAAK,OAAOrC,QAAS,CAAE,CAAEuK,MAAO,eAAOzD,MAAO,OAAW,CAAEyD,MAAO,qBACjGzD,MAAO,KAAS,CAAEyD,MAAO,qBAAQzD,MAAO,KAAS,CAAEyD,MAAO,eAAOzD,MAAO,MAAYA,MAAOtE,EAC3F6D,SAAU,gBAAaS,EAAb,EAAGkB,OAAUlB,MAAb,OAA0B,EAAKuJ,aAAavJ,IACtD8J,SAAO,MAIX,kBAAC,MAAD,CAAKhR,UAAU,oBACb,kBAAC,MAAD,CAAKA,UAAU,YACL,UAAT4P,EACD,kBAAC,IAAD,CACE3P,GAAE,2CAAsCF,EAAtC,qBAAwD8P,EAAxD,oBAA4EE,EAA5E,oBAA+FD,EAA/F,mBAAiHlN,IADrH,sBAKA,kBAAC,IAAD,CAAS3C,GAAG,IAAID,UAAU,iBAA1B,uBAKA,kBAAC,MAAD,CAAKA,UAAU,YACL,SAAT4P,EACD,kBAAC,IAAD,CACE3P,GAAE,0CAAqCF,EAArC,qBAAuD8P,EAAvD,oBAA2EE,EAA3E,oBAA8FD,EAA9F,mBAAgHlN,IADpH,sBAKA,kBAAC,IAAD,CAAS3C,GAAG,IAAID,UAAU,iBAA1B,uBAKA,kBAAC,MAAD,CAAKA,UAAU,YACL,cAAT4P,EACD,kBAAC,IAAD,CACE3P,GAAE,+CAA0CF,EAA1C,qBAA4D8P,EAA5D,oBAAgFE,EAAhF,oBAAmGD,EAAnG,mBAAqHlN,IADzH,sBAKA,kBAAC,IAAD,CAAS3C,GAAG,IAAID,UAAU,iBAA1B,0BAQN,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,wBACb,kBAAC,aAAD,CAAYiR,WAAYC,OAAOvB,GAAOwB,MAAOrQ,KAAKvB,MAAM0Q,UAAY,GAAKnP,KAAKvB,MAAM0Q,UAAY,GAC9FmB,QAAS,kBAAC,OAAD,qBACTC,SAAU,kBAAC,OAAD,sBACVnL,SAAUpF,KAAKyP,WACfe,WAAY,OAIlB,kBAAC,MAAD,CAAKtR,UAAU,SACS,IAArB+Q,EACDD,EAAS3M,KAAI,SAACoN,GAAD,OACb,kBAAC,MAAD,CAAK5N,EAAG,GAAI6N,EAAG,EAAGC,EAAG,EAAGC,GAAI,EAAGhT,IAAK6S,EAAQrR,IAC5C,kBAAC,EAAD,CAAOmD,MAAOkO,QAId,kBAAC,MAAD,CAAK5N,EAAG,GAAI3D,UAAU,UACtB,kBAAC,YAAD,CAAW2R,QAAM,EAACC,MAAM,OAAOC,UAAU,EAAO/J,KAAK,e,GApHpC7G,aA6HNC,gBACf,SAAClD,GAAD,MAAY,CACZ8S,SAAU9S,EAAMuT,QAAQxS,IAAI,gBAC5BkR,UAAWjS,EAAMuT,QAAQxS,IAAI,aAC7BX,OAAQJ,EAAMI,OAAO0T,YAErB,SAAC3Q,GAAD,MAAe,CACfkP,eAAgBjP,6BAAmB2Q,EAAgB5Q,MAPpCD,CASbiP,IC9IW6B,OAXf,SAAqBvS,GACnB,OACE,yBAAKO,UAAU,MACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,kBAAC,GAAD,CAAUP,QAASA,O,OCoHZwS,OAvHf,WACA,OACA,yBAAKjS,UAAU,MACb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,cACb,yBAAKA,UAAU,SAAf,UAEA,yBAAKA,UAAU,WAEb,yBAAKA,UAAU,UAAf,OAGA,yBAAKA,UAAU,QACb,kBAAC,EAAD,OAIF,yBAAKA,UAAU,UAAf,UAGA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,YAAf,KADF,OAGA,kBAAC,SAAD,CAAQE,GAAG,YAAYgS,SAAS,MAAMzL,SAAU,aAAyB0L,QAAQ,OACjF,yBAAKnS,UAAU,eACb,yBAAKA,UAAU,YAAf,MADF,SAIF,yBAAKA,UAAU,eACb,kBAAC,WAAD,CAAUE,GAAG,OAAOyK,MAAM,OAAOzD,MAAM,WAK3C,yBAAKlH,UAAU,UAAf,UAGA,yBAAKA,UAAU,aAAf,qGAGA,yBAAKA,UAAU,UACb,kBAAC,WAAD,CAAUE,GAAG,SAASyK,MAAM,SAASzD,MAAM,WAC3C,kBAAC,WAAD,CAAUhH,GAAG,SAASyK,MAAM,SAASzD,MAAM,WAC3C,kBAAC,WAAD,CAAUhH,GAAG,OAAOyK,MAAM,OAAOzD,MAAM,SACvC,kBAAC,WAAD,CAAUhH,GAAG,SAASyK,MAAM,SAASzD,MAAM,YAK7C,yBAAKlH,UAAU,UAAf,YAKA,yBAAKA,UAAU,aAAf,gHAKA,kBAAC,EAAD,MACA,yBAAKA,UAAU,QAGf,yBAAKA,UAAU,aAAf,iLAIA,yBAAKA,UAAU,UACb,kBAAC,WAAD,CAAUoS,UAAQ,EAAClS,GAAG,SAASyK,MAAM,SAASzD,MAAM,WACpD,kBAAC,WAAD,CAAUkL,UAAQ,EAAClS,GAAG,OAAOyK,MAAM,OAAOzD,MAAM,SAChD,kBAAC,WAAD,CAAUkL,UAAQ,EAAClS,GAAG,UAAUyK,MAAM,UAAUzD,MAAM,YACtD,kBAAC,WAAD,CAAUkL,UAAQ,EAAClS,GAAG,YAAYyK,MAAM,YAAYzD,MAAM,cAC1D,kBAAC,WAAD,CAAUkL,UAAQ,EAAClS,GAAG,SAASyK,MAAM,SAASzD,MAAM,WACpD,kBAAC,WAAD,CAAUkL,UAAQ,EAAClS,GAAG,UAAUyK,MAAM,UAAUzD,MAAM,YACtD,kBAAC,WAAD,CAAUkL,UAAQ,EAAClS,GAAG,SAASyK,MAAM,SAASzD,MAAM,WACpD,kBAAC,WAAD,CAAUkL,UAAQ,EAAClS,GAAG,OAAOyK,MAAM,OAAOzD,MAAM,SAChD,kBAAC,WAAD,CAAUkL,UAAQ,EAAClS,GAAG,QAAQyK,MAAM,QAAQzD,MAAM,WAEpD,yBAAKlH,UAAU,SAIf,yBAAKA,UAAU,QACf,yBAAKA,UAAU,QAGf,yBAAKA,UAAU,aAAf,4HAGA,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,kBAAC,OAAD,CAAMsE,OAAK,EAAChB,UAAW,kBAAC,OAAD,CAAMtD,UAAU,SAAhB,SACrBI,QAAS,MADX,YAKA,kBAAC,OAAD,CAAMkE,OAAK,EAAChB,UAAW,kBAAC,OAAD,CAAMtD,UAAU,SAAhB,SACrBI,QAAS,MADX,cAMF,yBAAKJ,UAAU,SAIjB,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAMC,GAAG,KACT,kBAAC,SAAD,oB,OCoMSoS,OArTf,WACA,OACA,yBAAKrS,UAAU,aACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,iBACb,yCACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,UACb,kBAAC,QAAD,CAAOsS,UAAQ,EAACC,SAAO,GACrB,+BACE,4BACE,wBAAIC,aAAW,SAAf,oBAGA,wBAAIA,aAAW,QAAf,UAKJ,+BACE,4BACE,4BACE,yBAAKxS,UAAU,SACb,yBACE6B,IAAI,uGACJD,IAAI,KACN,yBAAK5B,UAAU,eAAf,WAKJ,mDAIF,4BACE,4BACE,yBAAKA,UAAU,SACb,yBACE6B,IAAI,uGACJD,IAAI,KACN,yBAAK5B,UAAU,eAAf,WAKJ,mDAIF,4BACE,4BACE,yBAAKA,UAAU,SACb,yBACE6B,IAAI,uGACJD,IAAI,KACN,yBAAK5B,UAAU,eAAf,WAKJ,mDAIF,4BACE,4BACE,yBAAKA,UAAU,SACb,yBACE6B,IAAI,uGACJD,IAAI,KACN,yBAAK5B,UAAU,eAAf,WAKJ,mDAIF,4BACE,4BACE,yBAAKA,UAAU,SACb,yBACE6B,IAAI,uGACJD,IAAI,KACN,yBAAK5B,UAAU,eAAf,WAKJ,uDAQV,yBAAKA,UAAU,YACb,yBAAKA,UAAU,aACb,kBAAC,QAAD,CAAOsS,UAAQ,EAACG,WAAS,GACvB,+BACE,4BACE,wBAAID,aAAW,QAAf,QAGA,wBAAIA,aAAW,QAAf,QAGA,wBAAIA,aAAW,SAAf,WAKJ,+BACE,4BACE,iCAGA,kDAGA,4BACE,yBAAKxS,UAAU,SACb,yBACE6B,IAAI,uGACJD,IAAI,KACN,yBAAK5B,UAAU,aAAf,iBAMN,4BACE,iCAGA,kDAGA,4BACE,yBAAKA,UAAU,SACb,yBACE6B,IAAI,uGACJD,IAAI,KACN,yBAAK5B,UAAU,aAAf,iBAMN,4BACE,iCAGA,kDAGA,4BACE,yBAAKA,UAAU,SACb,yBACE6B,IAAI,uGACJD,IAAI,KACN,yBAAK5B,UAAU,aAAf,iBAMN,4BACE,iCAGA,kDAGA,4BACE,yBAAKA,UAAU,SACb,yBACE6B,IAAI,uGACJD,IAAI,KACN,yBAAK5B,UAAU,gBAAf,aAMN,4BACE,iCAGA,kDAGA,4BACE,yBAAKA,UAAU,SACb,yBACE6B,IAAI,uGACJD,IAAI,KACN,yBAAK5B,UAAU,gBAAf,aAMN,4BACE,iCAGA,4CAGA,4BACE,yBAAKA,UAAU,SACb,yBACE6B,IAAI,uGACJD,IAAI,KACN,yBAAK5B,UAAU,mBAAf,iBAMN,4BACE,iCAGA,4CAGA,4BACE,yBAAKA,UAAU,SACb,yBACE6B,IAAI,uGACJD,IAAI,KACN,yBAAK5B,UAAU,mBAAf,iBAMN,4BACE,iCAGA,kDAGA,4BACE,yBAAKA,UAAU,SACb,yBACE6B,IAAI,uGACJD,IAAI,KACN,yBAAK5B,UAAU,mBAAf,iBAMN,4BACE,iCAGA,4CAGA,4BACE,yBAAKA,UAAU,SACb,yBACE6B,IAAI,uGACJD,IAAI,KACN,yBAAK5B,UAAU,aAAf,UAMN,4BACE,kCAGA,kDAGA,4BACE,yBAAKA,UAAU,SACb,yBACE6B,IAAI,uGACJD,IAAI,KACN,yBAAK5B,UAAU,gBAAf,gBASZ,kBAAC,aAAD,CAAYiR,WAAY,EAAGE,MAAO,GAAIC,QAAS,kBAAC,OAAD,qBAC7CE,WAAY,EACZD,SAAU,kBAAC,OAAD,4BCpSZqB,G,4MACJC,mB,sBAAqB,8BAAArT,EAAA,yDACb5B,EAAae,EAAQM,IAAI,cADZ,wDAIXS,EAAgB,EAAKD,MAArBC,aACIrC,cAAcO,GALP,kBAOX8B,EAAYjC,cAPD,yDASjBkB,EAAQS,OAAO,cACfS,OAAOC,SAASC,KAAO,sBAVN,0D,kEAenBiB,KAAK6R,uB,+BAIL,OACE,yBAAK3S,UAAU,OACb,kBAAC,IAAD,CAAO4S,OAAK,EAAC5E,KAAK,IAAIC,UAAWlF,KACjC,kBAAC,IAAD,CAAO6J,OAAK,EAAC5E,KAAK,SAASC,UAAW3E,KACtC,kBAAC,IAAD,CAAOsJ,OAAK,EAAC5E,KAAK,QAAQC,UAAWG,KACrC,kBAAC,IAAD,CAAOJ,KAAK,YAAYC,UAAW+D,KACnC,kBAAC,IAAD,CAAOhE,KAAK,QAAQC,UAAWF,KAC/B,kBAAC,IAAD,CAAOC,KAAK,UAAUC,UAAWsB,KACjC,kBAAC,IAAD,CAAOvB,KAAK,UAAUC,UAAWgE,KACjC,kBAAC,IAAD,CAAOjE,KAAK,QAAQC,UAAWoE,U,GA7BrBpR,aAmCHC,eACb,MACA,SAACC,GAAD,MAAe,CACb3B,YAAa4B,6BAAmBC,EAAaF,MAHlCD,CAKbwR,ICvCaG,GAVF,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACX,OACI,kBAAC,IAAD,CAAUA,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO9E,KAAK,IAAIC,UAAWyE,QCGvBK,QACW,cAA7BpT,OAAOC,SAASoT,UAEe,UAA7BrT,OAAOC,SAASoT,UAEhBrT,OAAOC,SAASoT,SAASC,MACvB,2D,cCTSC,6BAAgB,CAC3BC,QACArG,QACAlP,OACA2T,WACA7C,UACA7F,UACAzK,OAAQgV,kBCRNN,GCFiB,WAIrB,OAHcO,sBAAYC,GAASC,+BACjCC,0BAAgBC,SDANC,GAEdC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,CAAMf,MAAOA,MAEfgB,SAASC,eAAe,SF6HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1L,MAAK,SAAA2L,GACJA,EAAaC,gBAEdC,OAAM,SAAArX,GACLF,QAAQE,MAAMA,EAAMqP,a","file":"static/js/main.ae4a18f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/detail-bg2.11ddf8dc.png\";","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://i02b208.p.ssafy.io:8000\";\r\naxios.interceptors.request.use(\r\n  function (config) {\r\n    console.log(config);\r\n    return config;\r\n  },\r\n  function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\nexport const checkEmailExists = (email) =>\r\n  axios.get(`${BASE_URL}/accounts/exists/email/` + email + \"/\");\r\nexport const checkUsernameExists = (username) =>\r\n  axios.get(\"/exists/username/\" + username);\r\n\r\nexport const localRegister = ({ email, username, password }) =>\r\n  axios.post(`${BASE_URL}/accounts/user/`, { email, username, password });\r\nexport const localLogin = ({ email, password }) =>\r\n  axios.post(`${BASE_URL}/accounts/login/`, { email, password });\r\n\r\nexport const checkStatus = () => 0;\r\nexport const logout = () => 0;\r\n\r\n// perfume\r\nexport const getPerfumes = (q) =>\r\n  axios.get(`${BASE_URL}/perfumes/`, {\r\n    params: {\r\n      page: q.page,\r\n      sort: q.sort,\r\n      category: q.category,\r\n      gender: q.gender,\r\n      include: q.include,\r\n      exclude: q.exclude,\r\n      brand: q.brand,\r\n    },\r\n  });\r\nexport const getPerfumeDetail = (id: number) =>\r\n  axios.get(`${BASE_URL}/perfumes/${id}`);\r\n\r\n// review\r\nexport const postReview = (content: string, rate: number, id: number, token:string) =>\r\n  axios.post(\r\n    `${BASE_URL}/perfumes/${id}/reviews/`,\r\n    {content: content, rate: rate},\r\n    { headers: { \"token\": token }}\r\n  );\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\nimport { Map } from 'immutable';\r\nimport * as API from 'lib/api';\r\nimport { pender } from 'redux-pender';\r\n\r\nconst SET_LOGGED_INFO = 'user/SET_LOGGED_INFO'; // 로그인 정보 설정\r\nconst SET_VALIDATED = 'user/SET_VALIDATED'; // validated 값 설정\r\nconst LOGOUT = 'user/LOGOUT'; // 로그아웃\r\nconst CHECK_STATUS = 'user/CHECK_STATUS'; // 현재 로그인상태 확인\r\n\r\nexport const setLoggedInfo = createAction(SET_LOGGED_INFO); // loggedInfo\r\nexport const setValidated = createAction(SET_VALIDATED); // validated\r\nexport const logout = createAction(LOGOUT, API.logout);\r\nexport const checkStatus = createAction(CHECK_STATUS, API.checkStatus);\r\n\r\nconst initialState = Map({\r\n    loggedInfo: Map({ // 현재 로그인중인 유저의 정보\r\n        token: 'no token',\r\n        user: null\r\n    }),\r\n    logged: false, // 현재 로그인중인지 알려준다\r\n    validated: false // 이 값은 현재 로그인중인지 아닌지 한번 서버측에 검증했음을 의미\r\n});\r\n\r\nexport default handleActions({\r\n    [SET_LOGGED_INFO]: (state = initialState, action) => state.set('loggedInfo', Map(action.payload)).set('logged', true),\r\n    [SET_VALIDATED]: (state:Map<any, any>, action) => state.set('validated', action.payload),\r\n    ...pender({\r\n        type: CHECK_STATUS,\r\n        onSuccess: (state:Map<any, any>, action) => state.set('loggedInfo', Map(action.payload.data)).set('validated', true), \r\n        onFailure: (state:Map<any, any>, action) => initialState\r\n    })\r\n}, initialState);","// 로컬 스토리지에 JSON 형태로 저장 / 불러오기 / 삭제 헬퍼\r\nconst storage = {\r\n    set: (key, object) => {\r\n        if (!localStorage) return;\r\n        localStorage[key] = (typeof object) === 'string' ? object : JSON.stringify(object);\r\n    },\r\n    get: (key) => {\r\n        if (!localStorage) return null;\r\n\r\n        if (!localStorage[key]) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            const parsed = JSON.parse(localStorage[key]);\r\n            return parsed;\r\n        } catch (e) {\r\n            return localStorage[key];\r\n        }\r\n    },\r\n    remove: (key) => {\r\n        if (!localStorage) return null;\r\n\r\n        if (localStorage[key]) {\r\n            localStorage.removeItem(key);\r\n        }\r\n    }\r\n};\r\n\r\nexport default storage;","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport * as userActions from 'redux/modules/user';\r\nimport { bindActionCreators } from 'redux';\r\nimport storage from 'lib/storage';\r\nimport 'materialize-css';\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { Navbar, Icon } from 'react-materialize';\r\nimport './Header.css'\r\n\r\ninterface HeaderProps {\r\n    UserActions: any,\r\n\t\tuser: any,\r\n    history: any,\r\n}\r\nclass Header extends Component<HeaderProps>{\r\n\r\n  handleLogout = async () => {\r\n    const { UserActions, history } = this.props;\r\n    try {\r\n        await UserActions.logout();\r\n\t\t\t\thistory.push('/')\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n\r\n    storage.remove('loggedInfo');\r\n    window.location.href = '/'; // 홈페이지로 새로고침\r\n}\r\n\r\n render() {\r\n   return(\r\n  <Navbar\r\n    alignLinks=\"right\"\r\n    brand={<Link className=\"brand-logo\" to=\"/\">LAURE RICHIS</Link>}\r\n    id=\"mobile-nav\"\r\n    menuIcon={<Icon>menu</Icon>}\r\n    options={{\r\n      draggable: false,\r\n      edge: 'left',\r\n      inDuration: 250,\r\n      onCloseEnd: null,\r\n      onCloseStart: null,\r\n      onOpenEnd: null,\r\n      onOpenStart: null,\r\n      outDuration: 200,\r\n      preventScrolling: true\r\n    }}\r\n  >\r\n    <NavLink to={`/perfume?page=1&sort=alpha&category=all&gender=all&include=all&exclude=None&brand=all`}>PERFUME</NavLink>\r\n    <Link to=\"/\">NEWS</Link>\r\n    <Link to=\"/\">ABOUT</Link>\r\n    <Link to=\"/survey\">SURVEY</Link>\r\n\t\t{ this.props.user.get('logged') \r\n\t\t\t\t? (<div onClick={this.handleLogout}>\r\n\t\t\t\t\t\t{this.props.user.getIn(['loggedInfo', 'username'])} <span >(로그아웃)</span>\r\n\t\t\t\t</div> )\r\n\t\t\t\t: <Link to=\"/auth/login\">\r\n      LOGIN\r\n    </Link>\r\n\t\t}\r\n\r\n  </Navbar>\r\n);\r\n }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        user: state.user\r\n    }),\r\n    (dispatch) => ({\r\n        UserActions: bindActionCreators(userActions, dispatch)\r\n    })\r\n)(Header);","import React from 'react'\r\nimport 'materialize-css';\r\n// import { Link } from 'react-router-dom'\r\nimport { Slider, Caption, Slide } from 'react-materialize';\r\nimport './Slider.css'\r\n\r\nexport default () => (\r\n\t<Slider\r\n\t\tfullscreen={false}\r\n\t\toptions={{\r\n\t\t\tduration: 500,\r\n\t\t\theight: 450,\r\n\t\t\tindicators: true,\r\n\t\t\tinterval: 6000\r\n\t\t}}\r\n\t>\r\n\t\t<Slide image={<img alt=\"\" src=\"https://user-images.githubusercontent.com/52684457/78926430-0a25de80-7ad8-11ea-8043-bef5c73d3449.jpg\" />}>\r\n\t\t\t<Caption placement=\"center\">\r\n\t\t\t\t<h3>\r\n\t\t\t\t\t로르 리시에 오신 것을 환영합니다.\r\n      </h3>\r\n\t\t\t\t<h5 className=\"light grey-text text-lighten-3\">\r\n\t\t\t\t\t어떤 향수를 찾고 계신가요?\r\n      </h5>\r\n\t\t\t</Caption>\r\n\t\t</Slide>\r\n\t\t<Slide image={<img alt=\"\" src=\"https://user-images.githubusercontent.com/52684457/78929034-9d611300-7adc-11ea-8237-8b95173a22a0.png\" />}>\r\n\t\t\t<Caption placement=\"left\">\r\n\t\t\t\t<h3>\r\n\t\t\t\t\t4월 달, 인기 향수 계열은 플로럴\r\n      </h3>\r\n\t\t\t\t<h5 className=\"light grey-text text-lighten-3\">\r\n\t\t\t\t\t봄이 지나가기 전에 골라야 할 향수가 있다면?\r\n      </h5>\r\n\t\t\t</Caption>\r\n\t\t</Slide>\r\n\t\t<Slide image={<img alt=\"\" src=\"https://user-images.githubusercontent.com/52684457/78929383-44de4580-7add-11ea-9719-375df77dd8ba.jpg\" />}>\r\n\t\t\t<Caption placement=\"center\">\r\n\t\t\t\t<h3>\r\n\t\t\t\t\t당신이 애타게 찾던 향수는?\r\n      </h3>\r\n\t\t\t\t<h5 className=\"light grey-text text-lighten-3\">\r\n\t\t\t\t\t로르 리시에서 향수를 찾을 수 있어요.\r\n      </h5>\r\n\t\t\t</Caption>\r\n\t\t</Slide>\r\n\t\t<Slide image={<img alt=\"\" src=\"https://user-images.githubusercontent.com/52684457/78928424-8b32a500-7adb-11ea-9b99-8263dd84b603.jpg\" />}>\r\n\t\t\t<Caption placement=\"left\">\r\n\t\t\t\t<h3>\r\n\t\t\t\t\t여름에는 어떤 향수를 뿌리면 좋을까?\r\n      </h3>\r\n\t\t\t\t<h5 className=\"light grey-text text-lighten-3\">\r\n\t\t\t\t\t곧 여름 시즌이 다가오고 있어요!\r\n      </h5>\r\n\t\t\t</Caption>\r\n\t\t</Slide>\r\n\t</Slider>\r\n)","import React from 'react'\r\nimport Icon from '@material-ui/core/Icon'\r\n\r\n// carousel\r\nimport Carousel from '@brainhubeu/react-carousel';\r\nimport '@brainhubeu/react-carousel/lib/style.css';\r\n\r\nexport default () => (\r\n  <Carousel\r\n  slidesPerPage={1}\r\n  arrows\r\n  infinite\r\n  arrowLeft={<Icon>keyboard_arrow_left</Icon>}    \r\n  arrowLeftDisabled={<Icon>keyboard_arrow_left</Icon>}\r\n  arrowRight={<Icon>keyboard_arrow_right</Icon>}\r\n  arrowRightDisabled={<Icon>keyboard_arrow_right</Icon>}\r\n  addArrowClickHandler\r\n  >\r\n      <img src=\"https://user-images.githubusercontent.com/52684457/78364149-f4a44680-75f7-11ea-807e-058782006beb.png\"\r\n        alt=\"\" />\r\n      <img src=\"https://user-images.githubusercontent.com/52684457/78364153-f5d57380-75f7-11ea-8a7b-ec33f2acb971.png\"\r\n        alt=\"\" />\r\n      <img src=\"https://user-images.githubusercontent.com/52684457/78364154-f66e0a00-75f7-11ea-8bdf-696c60f88508.png\"\r\n        alt=\"\" />\r\n      <img src=\"https://user-images.githubusercontent.com/52684457/78810565-78e53800-7a03-11ea-8a22-80c4f7211b71.png\"\r\n        alt=\"\" />\r\n      <img src=\"https://user-images.githubusercontent.com/52684457/78810573-7aaefb80-7a03-11ea-8c68-048c7e7b0234.png\"\r\n        alt=\"\" />\r\n      <img src=\"https://user-images.githubusercontent.com/52684457/78810576-7b479200-7a03-11ea-8cd4-8c08624bb059.png\"\r\n        alt=\"\" />\r\n      <img src=\"https://user-images.githubusercontent.com/52684457/78810580-7c78bf00-7a03-11ea-93f0-2c8081ace8e8.png\"\r\n        alt=\"\" />\r\n      <img src=\"https://user-images.githubusercontent.com/52684457/78810584-7c78bf00-7a03-11ea-88dd-c84b60138d10.png\"\r\n        alt=\"\" />\r\n    </Carousel>\r\n)","import React from \"react\";\r\nimport {\r\n  Card,\r\n  Icon,\r\n  CardTitle,\r\n  Chip,\r\n  Badge,\r\n  Row,\r\n  Col,\r\n} from \"react-materialize\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Cards.css\";\r\n\r\ninterface EachPerfumeProps {\r\n  field: {\r\n    name: string;\r\n    launch_date: string;\r\n    thumbnail: string;\r\n    gender: number;\r\n    availibility: string;\r\n    brand_id: string;\r\n    id: number;\r\n    image: string;\r\n    top_notes: Array<any>;\r\n    heart_notes: Array<object>;\r\n    base_notes: Array<object>;\r\n    avg_rate: number;\r\n    total_review: number;\r\n  };\r\n}\r\n\r\nconst defaultField = {\r\n  name: \"string\",\r\n  launch_date: \"string\",\r\n  thumbnail: \"string\",\r\n  id: 1,\r\n  gender: 1,\r\n  availibility: \"string\",\r\n  brand_id: \"string\",\r\n  image: \"null\",\r\n  top_notes: [{ name: \"floral\" }],\r\n  heart_notes: [{ name: \"floral\" }],\r\n  base_notes: [{ name: \"floral\" }],\r\n  avg_rate: 0,\r\n  total_review: 0,\r\n};\r\n\r\nexport default function Cards({ field = defaultField }: EachPerfumeProps) {\r\n  const gender_dict = {\r\n    0: \"MALE\",\r\n    1: \"FEMALE\",\r\n    2: \"SHARED / UNISEX\",\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      closeIcon={<Icon>close</Icon>}\r\n      header={\r\n        <CardTitle height=\"260\" image={field.thumbnail || \"no-image\"} reveal waves=\"light\" />\r\n      }\r\n      reveal={<p>워드클라우드가 들어갈 자리입니다</p>}\r\n      revealIcon={<Icon className=\"hidden\">home</Icon>}\r\n    >\r\n      <div>\r\n        <div className=\"title-gender-tags\">\r\n        <Row>\r\n          <Col s={9}>\r\n            <p className=\"card-title\">{field.name}</p>\r\n          </Col>\r\n          <Col s={3}>\r\n            <p className=\"rate-box right\"><Icon className=\"rate-box-star\">star</Icon>{field.avg_rate.toFixed(2)}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mx-2 gender-year\">\r\n          <Col className=\"gender-indicator\">\r\n            <Icon>wc</Icon>\r\n            <span>{gender_dict[field.gender]}</span>\r\n          </Col>\r\n          <Badge className=\"perfume-card-badge right\">\r\n            {field.launch_date\r\n              ? field.launch_date.substr(0, 4)\r\n              : \"(None)\"}\r\n            년 출시\r\n          </Badge>\r\n        </Row>\r\n        <Row className=\"note-tags\">\r\n          {field.top_notes.length > 0 ? (\r\n            field.top_notes.slice(0, 3).map((note, note_id) => (\r\n              <Chip\r\n                close={false}\r\n                options={null}\r\n                key={note_id}\r\n                className=\"chip-color\"\r\n              >\r\n                {note.kor_name || note.name}\r\n              </Chip>\r\n            ))\r\n          ) : (\r\n            <Chip close={false}>노트정보없음</Chip>\r\n          )}\r\n        </Row>\r\n        </div>\r\n        <Link to={`/detail/${field.id}`}>\r\n          <Row className=\"goto-detail-row\">\r\n            <p>보러가기</p>\r\n            <p className=\"mx-2\">\r\n              <Icon>insert_comment</Icon>\r\n            </p>\r\n            <p>리뷰 ({field.total_review})</p>\r\n          </Row>\r\n        </Link>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { DatePicker } from 'react-materialize';\r\n// import styled from 'styled-components';\r\nimport './Date.css'\r\n\r\nexport default () => (\r\n<DatePicker\r\n  id=\"DatePicker-5\"\r\n  placeholder=\"select birthday\"\r\n  options={{\r\n    autoClose: false,\r\n    container: null,\r\n    defaultDate: null,\r\n    disableDayFn: null,\r\n    disableWeekends: false,\r\n    events: [],\r\n    firstDay: 0,\r\n    format: 'mmm dd, yyyy',\r\n    i18n: {\r\n      cancel: 'Cancel',\r\n      clear: 'Clear',\r\n      done: 'Ok',\r\n      months: [\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n      ],\r\n      monthsShort: [\r\n        'Jan',\r\n        'Feb',\r\n        'Mar',\r\n        'Apr',\r\n        'May',\r\n        'Jun',\r\n        'Jul',\r\n        'Aug',\r\n        'Sep',\r\n        'Oct',\r\n        'Nov',\r\n        'Dec'\r\n      ],\r\n      nextMonth: '›',\r\n      previousMonth: '‹',\r\n      weekdays: [\r\n        'Sunday',\r\n        'Monday',\r\n        'Tuesday',\r\n        'Wednesday',\r\n        'Thursday',\r\n        'Friday',\r\n        'Saturday'\r\n      ],\r\n      weekdaysAbbrev: [\r\n        'S',\r\n        'M',\r\n        'T',\r\n        'W',\r\n        'T',\r\n        'F',\r\n        'S'\r\n      ],\r\n      weekdaysShort: [\r\n        'Sun',\r\n        'Mon',\r\n        'Tue',\r\n        'Wed',\r\n        'Thu',\r\n        'Fri',\r\n        'Sat'\r\n      ]\r\n    },\r\n    isRTL: false,\r\n    maxDate: null,\r\n    minDate: null,\r\n    onClose: null,\r\n    onDraw: null,\r\n    onOpen: null,\r\n    onSelect: null,\r\n    parse: null,\r\n    setDefaultDate: false,\r\n    showClearBtn: false,\r\n    showDaysInNextAndPreviousMonths: false,\r\n    showMonthAfterYear: false,\r\n    yearRange: 100\r\n  }}\r\n/>\r\n)\r\n","import React from 'react'\r\nimport { Select } from 'react-materialize';\r\nimport './Categories.css'\r\n\r\nexport default () => (\r\n  <Select\r\n  id=\"Select-9\"\r\n  multiple={false}\r\n  onChange={function noRefCheck(){}}\r\n  options={{\r\n    classes: '',\r\n    dropdownOptions: {\r\n      alignment: 'left',\r\n      autoTrigger: true,\r\n      closeOnClick: true,\r\n      constrainWidth: true,\r\n      coverTrigger: true,\r\n      hover: false,\r\n      inDuration: 150,\r\n      onCloseEnd: null,\r\n      onCloseStart: null,\r\n      onOpenEnd: null,\r\n      onOpenStart: null,\r\n      outDuration: 250\r\n    }\r\n  }}\r\n  value=\"\"\r\n>\r\n  <option\r\n    disabled\r\n    value=\"\"\r\n  >\r\n    Choose Category\r\n  </option>\r\n  <option value=\"1\">\r\n    Floral\r\n  </option>\r\n  <option value=\"2\">\r\n    Woody\r\n  </option>\r\n  <option value=\"3\">\r\n    Fruits\r\n  </option>\r\n  <option value=\"4\">\r\n    Animalic\r\n  </option>\r\n  <option value=\"5\">\r\n    Beverages\r\n  </option>\r\n</Select>\r\n)","import React from 'react'\r\nimport { Icon } from 'react-materialize'\r\n\r\nexport default () => (\r\n  <div>\r\n            <h5 className=\"white-text\">\r\n            8팀 동물의 숲\r\n          </h5>\r\n          <div className=\"row\">\r\n            <div className=\"col footer-teammates\">\r\n              <Icon>face</Icon>\r\n              <div>이경호</div>\r\n            </div>\r\n            <div className=\"col footer-teammates\">\r\n              <Icon>face</Icon>\r\n              <div>남승현</div>\r\n            </div>\r\n            <div className=\"col footer-teammates\">\r\n              <Icon>face</Icon>\r\n              <div>양혜진</div>\r\n            </div>\r\n            <div className=\"col footer-teammates\">\r\n              <Icon>face</Icon>\r\n              <div>이해인</div>\r\n            </div>\r\n            <div className=\"col footer-teammates\">\r\n              <Icon>face</Icon>\r\n              <div>박홍은</div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n);\r\n","// import * as React from 'react';\r\nimport React from 'react';\r\nimport {Component} from 'react';\r\n\r\ninterface SearchBoxProps {\r\n  query: string;\r\n  changeSearch: (query: string)=>{}\r\n}\r\ninterface SearchBoxState {\r\n  query: string;\r\n}\r\n\r\nexport default class SearchBox extends Component<SearchBoxProps, SearchBoxState> {\r\n\r\n  handleChange(event: React.SyntheticEvent) {\r\n    const target = event.target as HTMLInputElement;\r\n    this.props.changeSearch(target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-box\">\r\n        <input\r\n          type=\"search\"\r\n          placeholder=\"Search...\"\r\n          value={this.props.query}\r\n          onChange={this.handleChange.bind(this)}/>\r\n      </div>\r\n    );\r\n  }\r\n}","import { createAction, handleActions } from 'redux-actions';\r\nimport { pender } from 'redux-pender';\r\nimport * as API from 'lib/api';\r\nimport { Map } from 'immutable';\r\n\r\nconst CHANGE_INPUT = 'review/CHANGE_INPUT'; // input 값 변경\r\nconst POST_REVIEW = 'POST_REVIEW'; // 이메일 가입\r\n\r\nexport const changeInput = createAction(CHANGE_INPUT)\r\nexport const postReview = createAction(POST_REVIEW, API.postReview); \r\n\r\nconst initialState = Map({\r\n  form: Map({\r\n    content: '',\r\n    rate: 0,\r\n  })\r\n\r\n});\r\n\r\n\r\nexport default handleActions({\r\n    [CHANGE_INPUT]: (state = initialState, action) => {\r\n        const { form, name, value } = action.payload;\r\n        return state.setIn([form, name], value);\r\n    },\r\n    ...pender({\r\n        type: POST_REVIEW,\r\n        onSuccess: (state = initialState, action) => state.set('review_id', action.payload.review_id)\r\n    }),\r\n}, initialState);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon, Button } from \"react-materialize\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as reviewActions from \"redux/modules/review\";\r\nimport BeautyStars from \"beauty-stars\";\r\n\r\ninterface ReviewTextBoxProps {\r\n  ReviewActions: any;\r\n  form: any;\r\n  id: number;\r\n  token: string;\r\n}\r\n\r\nclass ReviewTextBox extends Component<ReviewTextBoxProps> {\r\n  state = {\r\n    size: \"25px\",\r\n    gap: \"8px\",\r\n    inactiveColor: \"rgba(110, 100, 64, 0.2)\",\r\n    activeColor: \"rgb(247, 214, 138)\",\r\n  };\r\n  handleChange = (e) => {\r\n    const { ReviewActions } = this.props;\r\n    const { value, name } = e.target;\r\n    ReviewActions.changeInput({\r\n      name,\r\n      value,\r\n      form: \"form\",\r\n    });\r\n  };\r\n  handleRate = (rate) => {\r\n    const {ReviewActions} = this.props;\r\n    const name = \"rate\"\r\n    const value = rate\r\n    ReviewActions.changeInput({\r\n      name,\r\n      value,\r\n      form: \"form\"\r\n    })\r\n  }\r\n  handlePosting = async () => {\r\n    const { form, ReviewActions, id, token } = this.props;\r\n    const { content, rate } = form.toJS();\r\n    try {\r\n        await ReviewActions.postReview(content, rate, id, token)\r\n        .then(r => {\r\n          alert('리뷰가 등록되었습니다')\r\n        }\r\n      )\r\n    } catch (e) {\r\n        alert(e);\r\n    }\r\n}\r\n\r\n  render() {\r\n    const { content, rate } = this.props.form.toJS();\r\n    return (\r\n      <div className=\"write_comment\">\r\n        <div className=\"row_comment\">\r\n          <Icon>chat</Icon>\r\n          <textarea name=\"content\" id=\"review-content-text\" onChange={this.handleChange} value={content}/>\r\n        </div>\r\n        <div className=\"StarRating\">\r\n        <BeautyStars\r\n          value={rate}\r\n          size={this.state.size}\r\n          gap={this.state.gap}\r\n          maxStars={10}\r\n          inactiveColor={this.state.inactiveColor}\r\n          activeColor={this.state.activeColor}\r\n          onChange={this.handleRate}\r\n      />\r\n          <Button node=\"button\" waves=\"light\" onClick={this.handlePosting}>\r\n            SUBMIT\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    form: state.review.get(\"form\"),\r\n    token: state.user.getIn([\"loggedInfo\", \"token\"])\r\n  }),\r\n  (dispatch) => ({\r\n    ReviewActions: bindActionCreators(reviewActions, dispatch),\r\n  })\r\n)(ReviewTextBox);\r\n","import React from 'react'\r\nimport { Header, Slider, FooterContent } from '../components'\r\nimport '../css/HomePage.css'\r\nimport { Footer, Icon, Row, Col } from 'react-materialize'\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction HomePage() {\r\nreturn (\r\n<div>\r\n  <Header />\r\n  <Slider />\r\n\r\n{/* 임시 btn */}\r\n  <div className=\"center user_page_link\">\r\n    <Button>\r\n      <Link to=\"/rank\">User Page</Link>\r\n    </Button>\r\n  </div>\r\n\r\n  <div className=\"container footer_container\">\r\n    <div className=\"home-section-devider\"><i>SERVICES</i></div>\r\n    <Row>\r\n      <Col className=\"intro-box\" s={4}>\r\n      <Icon large>pie_chart</Icon>\r\n      <h4>BIG DATA</h4>\r\n      <p>4만여개의 향수 데이터와 수십만건의 리뷰 분석, 유저간의 일치도 측정을 통해 신뢰성 있는 추천 향수를 제공합니다.</p>\r\n      </Col>\r\n\r\n      <Col className=\"intro-box\" s={4}>\r\n      <Icon large>devices</Icon>\r\n      <h4>PC & MOBILE</h4>\r\n      <p>언제 어디서나 향수 관련 정보를 찾아보세요.</p>\r\n      </Col>\r\n\r\n      <Col className=\"intro-box\" s={4}>\r\n      <Icon large>insert_chart_outlined</Icon>\r\n      <h4>ANALYTICS</h4>\r\n      <p>나이별, 성격별, 통계 자료를 볼 수 있어요.</p>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n\r\n  <Footer copyrights=\"2020 SSAFY DJ02-08\" links={<ul>\r\n    <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Github</a></li>\r\n    <li><a className=\"grey-text text-lighten-3\" href=\"#!\">SSAFY</a></li>\r\n    <li><a className=\"grey-text text-lighten-3\" href=\"#!\">SSAFY Instagram</a></li>\r\n    <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Buy us a coffee</a></li>\r\n    </ul>}\r\n    moreLinks={<a className=\"grey-text text-lighten-4 right\"\r\n      href=\"https://www.notion.so/Laure-Richis-e89e794cf439444994ab31f82d06f37a\">\r\n      <Icon>supervised_user_circle</Icon>See Our Project on NOTION\r\n    </a>}\r\n    >\r\n    <FooterContent />\r\n  </Footer>\r\n</div>\r\n);\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nfunction AboutPage() {\r\n  return (\r\n    <div>\r\n        <h1>하이하이 어바웃입니다</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutPage;\r\n","import { Map } from 'immutable';\r\nimport { handleActions, createAction } from 'redux-actions';\r\n\r\nconst SET_HEADER_VISIBILITY = 'base/SET_HEADER_VISIBILITY'; // 헤더 렌더링 여부 설정\r\n\r\nexport const setHeaderVisibility = createAction(SET_HEADER_VISIBILITY); // visible\r\n\r\nconst initialState = Map({\r\n    header: Map({\r\n        visible: true\r\n    })\r\n});\r\n\r\nexport default handleActions({\r\n    [SET_HEADER_VISIBILITY]: (state, action) => state.setIn(['header', 'visible'], action.payload)\r\n}, initialState);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../css/Auth.css'\r\n\r\n// 화면의 중앙에 위치시킨다\r\nconst Positioner = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    \r\n`;\r\n\r\n// 너비, 그림자 설정\r\nconst ShadowedBox = styled.div`\r\n    width: 35vw;\r\n    min-width: 650px;\r\n    box-shadow: 1px 1px 5px 1px rgba(0, 0, 0, 0.5);\r\n    border-radius: 8px;\r\n    animation: fadein 2s;\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n    background: linear-gradient(to right, rgb(292, 221, 232), rgb(196, 229, 231));\r\n    height: 7rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 8px 8px 0 0;\r\n    animation: tallToShort 2s;\r\n`;\r\n\r\nconst Logo = styled(Link)`\r\n    color: white;\r\n    font-size: 2.4rem;\r\n    letter-spacing: 5px;\r\n    text-decoration: none;\r\n`;\r\n\r\nconst Contents = styled.div`\r\n    border-radius: 0 0 8px 8px;\r\n    background: #fff;\r\n    padding: 2rem 5rem;\r\n    height: auto;\r\n\r\n`;\r\n\r\nconst LoginBox = ({ children }) => (\r\n    <Positioner>\r\n        <ShadowedBox>\r\n            <LogoWrapper>\r\n                <Logo to=\"/\"><i>LAURE RICHIS</i></Logo>\r\n            </LogoWrapper>\r\n            <Contents>\r\n                {children}\r\n            </Contents>\r\n        </ShadowedBox>\r\n    </Positioner>\r\n);\r\n\r\nexport default LoginBox;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.div`\r\n    font-size: 1.5rem;\r\n    font-weight: 500;\r\n    color: #3f3f3f;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nconst AuthContent = ({title, children}) => (\r\n    <div>\r\n        <Title>{title}</Title>\r\n        {children}\r\n    </div>\r\n);\r\n\r\nexport default AuthContent;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// 두개가 함께 있을땐 상단 (그 사이) 에 여백을 준다\r\nconst Wrapper = styled.div`\r\n    & + & {\r\n        margin-top: 1rem;\r\n    }\r\n`;\r\n\r\nconst Label = styled.div`\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: goldenrod;\r\n    margin-bottom: 0.25rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    border: 1px solid gray;\r\n    outline: none;\r\n    border-radius: 0px;\r\n    line-height: 2.5rem;\r\n    font-size: 1.2rem;\r\n    padding-left: 0.5rem;\r\n    padding-right: 0.5rem;\r\n    ::placeholder {\r\n        color: lightgray;\r\n    }\r\n`;\r\n\r\nconst LabelInput = ({label, ...rest}) => (\r\n    <Wrapper>\r\n        <Label>{label}</Label>\r\n        <Input {...rest}/>\r\n    </Wrapper>\r\n);\r\n\r\nexport default LabelInput;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    margin-top: 1rem;\r\n    padding-top: 0.6rem;\r\n    padding-bottom: 0.5rem;\r\n    margin-left: auto;\r\n    \r\n    border-radius: 15px;\r\n    width: 30%;\r\n    box-shadow: 2px 2px 3px lightpink;\r\n\r\n    // background: coral;\r\n    background: rgb(252, 211, 212);\r\n    color: white;\r\n\r\n    text-align: center;\r\n    font-size: 1.25rem;\r\n    font-weight: 500;\r\n\r\n    cursor: pointer;\r\n    user-select: none;\r\n    transition: .2s all;\r\n\r\n    &:hover {\r\n        // background: coral;\r\n        background:  rgb(196, 229, 231);\r\n        box-shadow: 2px 2px 3px lightblue;\r\n    }\r\n\r\n    &:active {\r\n        background: lightblue;\r\n        box-shadow: 2px 2px 3px rgb(166, 189, 191) inset;\r\n    }\r\n\r\n`;\r\n\r\ninterface AuthButtonProps {\r\n  children?: any;\r\n  onClick?: any;\r\n}\r\n\r\nconst AuthButton = (AuthButtonProps) => (\r\n    <Wrapper onClick={AuthButtonProps.onClick}>\r\n        {AuthButtonProps.children}\r\n    </Wrapper>\r\n);\r\n\r\nexport default AuthButton;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Aligner = styled.div`\r\n    margin-top: 1rem;\r\n    text-align: right;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n    color: gray;\r\n    &:hover {\r\n        color: #2f2f2f;\r\n    }\r\n`\r\n\r\nconst AlignedLink = ({to, children}) => (\r\n    <Aligner>\r\n        <StyledLink to={to}>{children}</StyledLink>\r\n    </Aligner>\r\n);\r\n\r\nexport default AlignedLink;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { keyframes } from 'styled-components';\r\n\r\nconst transitions = {\r\n  shake: keyframes`\r\n      0% {\r\n          transform: translate(-30px);\r\n      }\r\n      25% {\r\n          transform: translate(15px);\r\n      }\r\n      50% {\r\n          transform: translate(-10px);\r\n      }\r\n      75% {\r\n          transform: translate(5px);\r\n      }\r\n      100% {\r\n          transform: translate(0px);\r\n      }`\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n    color: red;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    animation: ${transitions.shake} 0.3s ease-in;\r\n    animation-fill-mode: forwards;\r\n`;\r\n\r\nconst AuthError = ({ children }) => (\r\n  <Wrapper>\r\n    {children}\r\n  </Wrapper>\r\n);\r\n\r\nexport default AuthError;","import { createAction, handleActions } from 'redux-actions';\r\nimport { pender } from 'redux-pender';\r\nimport * as API from 'lib/api';\r\nimport { Map } from 'immutable';\r\n\r\nconst CHANGE_INPUT = 'auth/CHANGE_INPUT'; // input 값 변경\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM'; // form 초기화\r\nconst CHECK_EMAIL_EXISTS = 'auth/CHECK_EMAIL_EXISTS'; // 이메일 중복 확인\r\nconst CHECK_USERNAME_EXISTS = 'auth/CHECK_USERNAME_EXISTS'; // 아이디 중복 확인\r\nconst SET_ERROR = 'auth/SET_ERROR'; // 오류 설정\r\nconst LOCAL_REGISTER = 'auth/LOCAL_REGISTER'; // 이메일 가입\r\nconst LOCAL_LOGIN = 'auth/LOCAL_LOGIN'; // 이메일 로그인\r\n// const LOGOUT = 'auth/LOGOUT'; // 로그아웃\r\n\r\nexport const changeInput = createAction(CHANGE_INPUT); //  { form, name, value }\r\nexport const initializeForm = createAction(INITIALIZE_FORM); // form \r\nexport const checkEmailExists = createAction(CHECK_EMAIL_EXISTS, API.checkEmailExists); // email\r\nexport const checkUsernameExists = createAction(CHECK_USERNAME_EXISTS, API.checkUsernameExists); // username\r\nexport const setError = createAction(SET_ERROR); // { form, message }\r\nexport const localRegister = createAction(LOCAL_REGISTER, API.localRegister); // { email, username, password }\r\nexport const localLogin = createAction(LOCAL_LOGIN, API.localLogin); // { email, password }\r\n\r\n// export const logout = createAction(LOGOUT, AuthAPI.logout);\r\n\r\nconst initialState = Map({\r\n    register: Map({\r\n        form: Map({\r\n            email: '',\r\n            username: '',\r\n            password: '',\r\n            passwordConfirm: ''\r\n        }),\r\n        exists: Map({\r\n            email: false,\r\n            password: false\r\n        }),\r\n        error: null\r\n    }),\r\n    login: Map({\r\n        form: Map({\r\n            email: '',\r\n            password: ''\r\n        }),\r\n        error: null\r\n    }),\r\n    result: Map({})\r\n});\r\n\r\n\r\nexport default handleActions({\r\n    [CHANGE_INPUT]: (state:Map<any, any>, action) => {\r\n        const { form, name, value } = action.payload;\r\n        return state.setIn([form, 'form', name], value);\r\n    },\r\n    ...pender({\r\n        type: CHECK_EMAIL_EXISTS,\r\n        onSuccess: (state = initialState, action) => state.setIn(['register', 'exists', 'email'], action.payload.data.exists)\r\n    }),\r\n    [INITIALIZE_FORM]: (state:Map<any, any>, action) => {\r\n        const initialForm = initialState.get(action.payload);\r\n        return state.set(action.payload, initialForm);\r\n    },\r\n    ...pender({\r\n        type: CHECK_USERNAME_EXISTS,\r\n        onSuccess: (state:Map<any, any>, action) => state.setIn(['register', 'exists', 'username'], action.payload.data.exists)\r\n    }),\r\n    [SET_ERROR]: (state:Map<any, any>, action) => {\r\n        const { form, message } = action.payload;\r\n        return state.setIn([form, 'error'], message);\r\n    },\r\n    ...pender({\r\n        type: LOCAL_LOGIN,\r\n        onSuccess: (state = initialState, action) => state.set('result', Map(action.payload.data))\r\n    }),\r\n    ...pender({\r\n        type: LOCAL_REGISTER,\r\n        onSuccess: (state = initialState, action) => state.set('result', Map(action.payload.data))\r\n    }),\r\n}, initialState);","import React, { Component } from 'react';\r\nimport { AuthContent, LabelInput, AuthButton, AlignedLink, AuthError } from 'components/Auth';\r\nimport { connect } from 'react-redux';\r\nimport jwt from 'jwt-decode'\r\nimport { bindActionCreators } from 'redux';\r\nimport * as authActions from 'redux/modules/auth';\r\nimport * as userActions from 'redux/modules/user';\r\nimport queryString from 'query-string';\r\nimport storage from 'lib/storage';\r\n\r\ninterface LoginProps {\r\n    AuthActions: any,\r\n    UserActions: any,\r\n    message: string,\r\n    form: any,\r\n    exists: Map<{}, {}>,\r\n    error: boolean,\r\n    history: any,\r\n    result: any,\r\n    location: any\r\n}\r\n\r\n\r\nclass Login extends Component<LoginProps> {\r\n\r\n    handleChange = (e) => {\r\n        const { AuthActions } = this.props;\r\n        const { name, value } = e.target;\r\n\r\n        AuthActions.changeInput({\r\n            name,\r\n            value,\r\n            form: 'login'\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { location } = this.props;\r\n        const query = queryString.parse(location.search);\r\n\r\n        if (query.expired !== undefined) {\r\n            this.setError('세션에 만료되었습니다. 다시 로그인하세요.')\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        const { AuthActions } = this.props;\r\n        AuthActions.initializeForm('login')\r\n    }\r\n\r\n    setError = (message) => {\r\n        const { AuthActions } = this.props;\r\n        AuthActions.setError({\r\n            form: 'login',\r\n            message\r\n        });\r\n        return false;\r\n    }\r\n\r\n\r\n    handleLocalLogin = async () => {\r\n        const { form, AuthActions, UserActions, history } = this.props;\r\n        const { email, password } = form.toJS();\r\n\r\n        try {\r\n            await AuthActions.localLogin({ email, password })\r\n            .then(r => {\r\n                const token = r.data.token\r\n                const user = jwt(token); // decode your token here\r\n                const loggedInfo = user\r\n                loggedInfo.token = token\r\n                UserActions.setLoggedInfo(loggedInfo);\r\n                history.push('/');\r\n                storage.set('loggedInfo', loggedInfo);\r\n            }\r\n            )\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setError('잘못된 계정정보입니다.');\r\n        }\r\n    }\r\n    render() {\r\n        const { email, password } = this.props.form.toJS(); // form 에서 email 과 password 값을 읽어옴\r\n        const { handleChange, handleLocalLogin } = this;\r\n        const { error } = this.props;\r\n\r\n        return (\r\n            <AuthContent title=\"LOGIN\">\r\n                <LabelInput\r\n                    label=\"이메일\"\r\n                    name=\"email\"\r\n                    placeholder=\"perfume@liche.com\"\r\n                    value={email}\r\n                    onChange={handleChange} />\r\n                <LabelInput\r\n                    label=\"비밀번호\"\r\n                    name=\"password\"\r\n                    placeholder=\"*********\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={handleChange} />\r\n                {\r\n                    error && <AuthError>{error}</AuthError>\r\n                }\r\n                <AuthButton onClick={handleLocalLogin}>Log In</AuthButton>\r\n                <AlignedLink to=\"/auth/register\">회원가입</AlignedLink>\r\n            </AuthContent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['login', 'form']),\r\n        error: state.auth.getIn(['login', 'error']),\r\n        result: state.auth.get('result')\r\n    }),\r\n    (dispatch) => ({\r\n        AuthActions: bindActionCreators(authActions, dispatch),\r\n        UserActions: bindActionCreators(userActions, dispatch)\r\n    })\r\n)(Login);","import React, { Component } from 'react';\r\nimport { AuthContent, LabelInput, AuthButton, AlignedLink, AuthError } from 'components/Auth';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { isEmail, isLength, isAlphanumeric } from 'validator';\r\nimport debounce from 'lodash/debounce';\r\nimport { Map } from 'immutable'\r\nimport * as authActions from 'redux/modules/auth';\r\nimport * as userActions from 'redux/modules/user';\r\nimport storage from 'lib/storage';\r\n\r\n\r\ninterface RegisterProps {\r\n    AuthActions: any,\r\n    UserActions: any,\r\n    message: string,\r\n    form: any,\r\n    exists: Map<{}, {}>,\r\n    error: boolean,\r\n    history: any,\r\n    result: any\r\n}\r\n\r\nclass Register extends Component<RegisterProps> {\r\n\r\n    setError = (message) => {\r\n        const AuthActions = this.props.AuthActions;\r\n        AuthActions.setError({\r\n            form: 'register',\r\n            message\r\n        });\r\n    }\r\n\r\n    validate = {\r\n        email: (value) => {\r\n            if (!isEmail(value)) {\r\n                this.setError('잘못된 이메일 형식 입니다.');\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        username: (value) => {\r\n            if (!isAlphanumeric(value) || !isLength(value, { min: 4, max: 15 })) {\r\n                this.setError('닉네임은 4~15 글자의 알파벳 혹은 숫자로 이뤄져야 합니다.');\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        password: (value) => {\r\n            if (!isLength(value, { min: 6 })) {\r\n                this.setError('비밀번호를 6자 이상 입력하세요.');\r\n                return false;\r\n            }\r\n            this.setError(null); // 이메일과 아이디는 에러 null 처리를 중복확인 부분에서 하게 됩니다\r\n            return true;\r\n        },\r\n        passwordConfirm: (value) => {\r\n            if (this.props.form.get('password') !== value) {\r\n                this.setError('비밀번호확인이 일치하지 않습니다.');\r\n                return false;\r\n            }\r\n            this.setError(null);\r\n            return true;\r\n        }\r\n    }\r\n    checkEmailExists = debounce(async (email) => {\r\n        const { AuthActions } = this.props;\r\n        try {\r\n            await AuthActions.checkEmailExists(email)\r\n            if (this.props.exists.get('email')) {\r\n                this.setError('이미 존재하는 이메일입니다.');\r\n            } else {\r\n                this.setError(null);\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }, 300)\r\n\r\n    checkUsernameExists = debounce(async (username) => {\r\n        const { AuthActions } = this.props;\r\n        try {\r\n            await AuthActions.checkUsernameExists(username);\r\n            if (this.props.exists.get('username')) {\r\n                this.setError('이미 존재하는 아이디입니다.');\r\n            } else {\r\n                this.setError(null);\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }, 300)\r\n\r\n    handleChange = (e) => {\r\n        const { AuthActions } = this.props;\r\n        const { name, value } = e.target;\r\n\r\n        AuthActions.changeInput({\r\n            name,\r\n            value,\r\n            form: 'register'\r\n        });\r\n        // 검증작업 진행\r\n        const validation = this.validate[name](value);\r\n        if (name.indexOf('password') > -1 || !validation) return; // 비밀번호 검증이거나, 검증 실패하면 여기서 마침\r\n\r\n        // 이메일, 아이디 중복 확인\r\n        const check = name === 'email' ? this.checkEmailExists : this.checkUsernameExists; // name 에 따라 이메일체크할지 아이디 체크 할지 결정\r\n        check(value);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { AuthActions } = this.props;\r\n        AuthActions.initializeForm('register')\r\n    }\r\n    handleLocalRegister = async () => {\r\n        const { form, AuthActions, UserActions, error, history } = this.props;\r\n        const { email, username, password, passwordConfirm } = form.toJS();\r\n\r\n        const { validate } = this;\r\n\r\n        if(error) return; // 현재 에러가 있는 상태라면 진행하지 않음\r\n        if(!validate['email'](email) \r\n            || !validate['username'](username) \r\n            || !validate['password'](password) \r\n            || !validate['passwordConfirm'](passwordConfirm)) { \r\n            // 하나라도 실패하면 진행하지 않음\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await AuthActions.localRegister({\r\n                email, username, password\r\n            });\r\n            const loggedInfo = this.props.result.toJS();\r\n\r\n            storage.set('loggedInfo', loggedInfo);\r\n            UserActions.setLoggedInfo(loggedInfo);\r\n            UserActions.setValidated(true);\r\n            history.push('/login'); // 회원가입 성공시 로그인페이지로 이동\r\n        } catch(e) {\r\n            // 에러 처리하기\r\n            if(e.response.status === 409) {\r\n                const { key } = e.response.data;\r\n                const message = key === 'email' ? '이미 존재하는 이메일입니다.' : '이미 존재하는 아이디입니다.';\r\n                return this.setError(message);\r\n            }\r\n            this.setError('알 수 없는 에러가 발생했습니다.')\r\n        }\r\n    }\r\n    render() {\r\n        const { error } = this.props;\r\n        const { email, username, password, passwordConfirm } = this.props.form.toJS();\r\n        const { handleChange } = this;\r\n        return (\r\n            <AuthContent title=\"회원가입\">\r\n                <LabelInput\r\n                    label=\"이메일 주소\"\r\n                    name=\"email\"\r\n                    placeholder=\"ex) example@perfume.com\"\r\n                    value={email} onChange={handleChange} />\r\n                <LabelInput\r\n                    label=\"별명\"\r\n                    name=\"username\"\r\n                    placeholder=\"ex) laure23\"\r\n                    value={username}\r\n                    onChange={handleChange} />\r\n                <LabelInput\r\n                    label=\"비밀번호\"\r\n                    name=\"password\"\r\n                    placeholder=\"******\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={handleChange} />\r\n                <LabelInput\r\n                    label=\"비밀번호 확인\"\r\n                    name=\"passwordConfirm\"\r\n                    placeholder=\"******\"\r\n                    type=\"password\"\r\n                    value={passwordConfirm}\r\n                    onChange={handleChange} />\r\n                {\r\n                    error && <AuthError>{error}</AuthError>\r\n                }\r\n                <AuthButton onClick={this.handleLocalRegister}>회원가입</AuthButton>\r\n                <AlignedLink to=\"/auth/login\">로그인</AlignedLink>\r\n            </AuthContent>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        form: state.auth.getIn(['register', 'form']),\r\n        error: state.auth.getIn(['register', 'error']),\r\n        exists: state.auth.getIn(['register', 'exists']),\r\n        result: state.auth.get('result')\r\n    }),\r\n    (dispatch) => ({\r\n        AuthActions: bindActionCreators(authActions, dispatch),\r\n        UserActions: bindActionCreators(userActions, dispatch)\r\n    })\r\n)(Register);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as baseActions from 'redux/modules/base';\r\nimport { Route } from 'react-router-dom';\r\nimport { LoginBox } from 'components/Auth';\r\nimport { Login, Register } from 'containers/Auth';\r\nimport styled from 'styled-components';\r\nimport bg from 'assets/detail-bg2.png';\r\n\r\nconst LoginPageBackground = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-image: url(${bg});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n`;\r\n\r\nclass LoginPage extends Component {\r\n    render() {\r\n        return (\r\n          <LoginPageBackground>\r\n            <LoginBox>\r\n                <Route path=\"/auth/login\" component={Login}/>\r\n                <Route path=\"/auth/register\" component={Register}/>\r\n            </LoginBox>\r\n          </LoginPageBackground>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n\r\n    }),\r\n    (dispatch) => ({\r\n        BaseActions: bindActionCreators(baseActions, dispatch)\r\n    })\r\n)(LoginPage);","import React from 'react';\r\nimport { Collapsible, CollapsibleItem } from 'react-materialize';\r\nimport { Header } from '../components'\r\nimport 'materialize-css';\r\nimport '../css/TestPage.css'\r\n\r\nfunction TestPage() {\r\nreturn (\r\n<div>\r\n  <Header />\r\n  <div className=\"center test_center\">\r\n      {/* <SearchBar /> */}\r\n\r\n    {/* banner */}\r\n    <div className=\"test_banner\">\r\n      <div className=\"test_border_box\">\r\n        <div className=\"test_font\">\r\n          <div className=\"test_underlines\">\r\n            <div className=\"font_start\">\r\n              TEST\r\n            </div>\r\n          </div>\r\n          <div className=\"test_context\">\r\n            \" This is TestPage ! <br />\r\n            Have a good time :) \"\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* content */}\r\n      <div className=\"content_box\">\r\n        <div className=\"deco_box\">\r\n          <div className=\"left_box_\">\r\n            <img src=\"https://user-images.githubusercontent.com/52684457/78364153-f5d57380-75f7-11ea-8a7b-ec33f2acb971.png\" \r\n            alt=\"\"\r\n            width=\"140px;\"/>\r\n            <img src=\"https://user-images.githubusercontent.com/52684457/78364154-f66e0a00-75f7-11ea-8bdf-696c60f88508.png\" \r\n            alt=\"\"\r\n            width=\"230px;\"/>\r\n            <img src=\"https://user-images.githubusercontent.com/52684457/78364149-f4a44680-75f7-11ea-807e-058782006beb.png\" \r\n            alt=\"\"\r\n            width=\"140px;\"/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"test_collapsible\">\r\n          <Collapsible accordion popout>\r\n            <CollapsibleItem expanded={false} header=\"`` 향수에도 부작용이 있다는 사실! 아시나요? ``\" node=\"div\"\r\n              >\r\n              소량 사용 후, 알레르기와 같은 반응이 없는지 확인하세요.\r\n              특히 농도가 높은 화학물질은 신경계에 영향을 줘서 어지럼증, 두통, 피부·호흡기 알레르기 같은 반응을 더 많이 일으킬 수 있습니다.\r\n              반응이 있을 경우에는 사용부위 세척을 하고 가까운 병원을 내원하시길 바랍니다.\r\n            </CollapsibleItem>\r\n            <CollapsibleItem expanded={false} header=\"`` 가정 내 어린아이와 반려동물이 있나요? ``\" node=\"div\"\r\n              >\r\n              입에 넣거나 눈에 들어갈 위험이 발생할 수 있습니다. 어린아이와 반려동물 손에 닿지 않는곳에 보관하세요.\r\n              실수로 입에 넣거나 눈에 들어갔을 경우에는 흐르는 물에 씻은 후 가까운 병원을 내원하시길 바랍니다.\r\n              특히나 반려동물에게는 향수가 극심한 독성 작용을 할 수 있으니 주의해서 사시길 바랍니다.\r\n            </CollapsibleItem>\r\n            {/* <CollapsibleItem expanded={false} header=\"`` 유통기한이 지난 향수는 어떻게 처분하는지 아시나요? ``\" icon={<Icon>delete_forever\r\n              </Icon>}\r\n              node=\"div\"\r\n              > */}\r\n            <CollapsibleItem expanded={false} header=\"`` 유통기한이 지난 향수는 어떻게 처분하는지 아시나요? ``\" node=\"div\"\r\n              >\r\n              유통기한이 지난 향수는 직접 피부에 닿을 시, 알레르기와 피부 질환을 유발합니다.\r\n              디퓨저로 재활용하여 집을 향기롭게 꾸며보세요!\r\n            </CollapsibleItem>\r\n          </Collapsible>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n  </div>\r\n</div>\r\n)\r\n}\r\n\r\nexport default TestPage;","import { createAction, handleActions } from \"redux-actions\";\r\nimport { pender } from \"redux-pender\";\r\nimport * as API from \"lib/api\";\r\nimport { Map } from \"immutable\";\r\n\r\nconst GET_DETAIL = \"detail/GET_DETAIL\";\r\n\r\nexport const getPerfumeDetail = createAction(GET_DETAIL, API.getPerfumeDetail);\r\n\r\nconst initialState = Map({\r\n  detail: {\r\n    id: 26148987,\r\n    avg_rate: 10,\r\n    top_notes: [\r\n      { id: 247, name: \"coffee\", kor_name: \"커피\" },\r\n      { id: 367, name: \"gardenia\", kor_name: \"가디니아\" },\r\n      { id: 444, name: \"hyacinth\", kor_name: \"히아신스\" },\r\n      { id: 527, name: \"lily\", kor_name: \"릴리\" },\r\n      { id: 664, name: \"orchid\", kor_name: \"오키드\" },\r\n      { id: 785, name: \"rose\", kor_name: \"로즈\" },\r\n      { id: 913, name: \"tuberose\", kor_name: \"터브로즈\" },\r\n    ],\r\n    heart_notes: [],\r\n    base_notes: [],\r\n    total_review: 1,\r\n    brand: { id: 1, name: \"& Other Stories\" },\r\n    name: \" 04째N 74째W - Columbia\",\r\n    launch_date: \"2014-01-01\",\r\n    thumbnail: \"http://www.basenotes.net/photos/products/300/26148987-3407.jpg\",\r\n    gender: 0,\r\n    availability: true,\r\n    categories: [],\r\n    seasons: [],\r\n  },\r\n});\r\n\r\nexport default handleActions(\r\n  {\r\n    ...pender({\r\n      type: GET_DETAIL,\r\n      onSuccess: (state = initialState, action) => {\r\n        return state.set(\"detail\", action.payload.data);\r\n      },\r\n    }),\r\n  },\r\n  initialState\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as detailActions from \"redux/modules/detail\";\r\nimport { Icon } from \"react-materialize\";\r\n\r\nimport { Carousel, ReviewTextBox } from \"components/\";\r\nimport { withRouter } from \"react-router\";\r\nimport \"../../css/DetailPage.css\";\r\n\r\ninterface DetailProps {\r\n  history: any;\r\n  DetailActions: any;\r\n  detail: any;\r\n}\r\n\r\nclass Detail extends Component<DetailProps> {\r\n  initializeDetailInfo = async () => {\r\n    const { DetailActions, history } = this.props;\r\n    const perfume_id = history.location.pathname.split(\"/\")[2];\r\n    await DetailActions.getPerfumeDetail(perfume_id);\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.initializeDetailInfo();\r\n  }\r\n\r\n  render() {\r\n    const { detail } = this.props\r\n    return (\r\n      <div className=\"center detail_center\">\r\n        <div className=\"detail_box\">\r\n          {/* 향수 div의 왼쪽 (향수 이름, 사진) */}\r\n          <div className=\"left_box\">\r\n            {/* Name */}\r\n    <div className=\"perfume_brand\">{detail.brand.name}</div>\r\n            {/* Thumbnail */}\r\n            <img\r\n              src={detail.thumbnail}\r\n              alt=\"\"\r\n            />\r\n\r\n            {/* Favorite */}\r\n            <div className=\"like\">\r\n              <Icon>favorite</Icon>\r\n              {/* <Icon>favorite_border</Icon> */}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 향수 정보 */}\r\n          <div className=\"perfume_info\">\r\n            {/* PerfumeId & Year */}\r\n            <div className=\"perfume_id\">\r\n              {detail.id} / {detail.launch_date}\r\n            </div>\r\n            <div className=\"perfume_name\">\r\n              {detail.name}\r\n              {/* <div className=\"gender\">\r\n            <img\r\n              src=\"https://user-images.githubusercontent.com/52684457/78762652-18cca280-79bf-11ea-963b-9e152f6224a2.png\"\r\n              alt=\"\" />\r\n            <img\r\n              src=\"https://user-images.githubusercontent.com/52684457/78762655-19fdcf80-79bf-11ea-8162-fdd887cfd192.png\"\r\n              alt=\"\" />\r\n          </div> */}\r\n            </div>\r\n\r\n            {/* star rating */}\r\n            <div className=\"star_rating\">\r\n              <div className=\"average\">4.0</div>\r\n            </div>\r\n\r\n            {/* 향수 정보 */}\r\n            <div className=\"contexts\">\r\n              <div className=\"context gender\">\r\n                <i>Preferred Gender</i>\r\n                <br />\r\n                <img\r\n                  src=\"https://user-images.githubusercontent.com/52684457/78762652-18cca280-79bf-11ea-963b-9e152f6224a2.png\"\r\n                  alt=\"\"\r\n                />\r\n                <img\r\n                  src=\"https://user-images.githubusercontent.com/52684457/78762655-19fdcf80-79bf-11ea-8162-fdd887cfd192.png\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"context\">\r\n                <i>Category</i>\r\n                <div className=\"category\">\r\n                  Woody <br />\r\n                  Floral\r\n                </div>\r\n              </div>\r\n              <div className=\"context\">\r\n                <i>Availablity</i>\r\n                <div className=\"availablity\">Available</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* notes */}\r\n        <div className=\"notes_box\">\r\n          <div className=\"title_box\">\r\n            <div className=\"note_title\">NOTES</div>\r\n          </div>\r\n\r\n          <div className=\"notes\">\r\n            <div className=\"note\">\r\n              <div className=\"top\">\r\n                <b>TOP</b>\r\n                <br />\r\n                <div className=\"note_info\">juiper, ciamo leaf</div>\r\n              </div>\r\n              <div className=\"heart\">\r\n                <b>HEART</b>\r\n                <br />\r\n                <div className=\"note_info\">coriader, laurel, rose, ciamo</div>\r\n              </div>\r\n              <div className=\"base\">\r\n                <b>BASE</b>\r\n                <br />\r\n                <div className=\"note_info\">ambergris, musk</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"note_img\">\r\n              <img\r\n                src=\"https://user-images.githubusercontent.com/52684457/78767269-559b9800-79c5-11ea-9726-ce3d009afc30.png\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Carousel */}\r\n        <div className=\"carousel_br\"></div>\r\n        <div className=\"recommend_list\">The Other Perfumes</div>\r\n        <div className=\"carousel_list\">\r\n          <Carousel />\r\n        </div>\r\n\r\n        {/* Reviews */}\r\n        <div className=\"review_box\">\r\n          <div className=\"review_title\">Reviews</div>\r\n          <ReviewTextBox id={26148987} />\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(\r\n  connect(\r\n    (state) => ({\r\n      detail: state.detail.get('detail')\r\n    }),\r\n    (dispatch) => ({\r\n      DetailActions: bindActionCreators(detailActions, dispatch),\r\n    })\r\n  )(Detail)\r\n);\r\n","import React from 'react';\r\nimport { Header } from 'components/'\r\nimport { Detail } from 'containers/Detail'\r\nimport '../css/DetailPage.css'\r\n\r\nfunction DetailPage() {\r\nreturn (\r\n<div className=\"bg-detail\">\r\n  <Header />\r\n  <Detail />\r\n</div>\r\n)\r\n}\r\n\r\nexport default DetailPage;","import { createAction, handleActions } from 'redux-actions';\r\nimport { pender } from 'redux-pender';\r\nimport { Map } from 'immutable';\r\nimport * as API from 'lib/api';\r\n\r\n// 액션 타입 정의\r\n\r\nconst GET_PERFUME_INFO = 'GET_PERFUME_INFO' // 향수 정보 가져오기\r\n\r\n// 액션 프로바이더 정의\r\n\r\nexport const getPerfumeInfo = createAction(GET_PERFUME_INFO, API.getPerfumes)\r\n\r\nconst initialState = Map({\r\n  perfumesList: [],\r\n  num_pages: 0\r\n});\r\n\r\nexport default handleActions({\r\n  ...pender({\r\n    type: GET_PERFUME_INFO,\r\n    onSuccess: (state = initialState, action) => {\r\n      return state.set('perfumesList', action.payload.data).set('num_pages', parseInt(action.payload.headers.num_pages))\r\n    }\r\n  }),\r\n}, initialState);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as perfumeActions from \"redux/modules/perfume\";\r\nimport { Cards } from \"components/\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\nRow,\r\nCol,\r\nPagination,\r\nIcon,\r\nPreloader,\r\nRadioGroup,\r\n} from \"react-materialize\";\r\nimport queryString from \"query-string\";\r\n\r\ninterface PerfumeProps {\r\nPerfumeActions: any;\r\nnum_pages: number,\r\nperfumes: any;\r\nhistory: any;\r\npender: any;\r\n}\r\n\r\nclass Perfumes extends Component<PerfumeProps> {\r\n  initializePerfumeInfo = async () => {\r\n  const { PerfumeActions, history } = this.props;\r\n  const queryParams = queryString.parse(history.location.search);\r\n  await PerfumeActions.getPerfumeInfo(queryParams);\r\n  };\r\n\r\n  componentDidMount() {\r\n  this.initializePerfumeInfo();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n  let oldId = prevProps.history.location.search;\r\n  let newId = this.props.history.location.search;\r\n  if (newId !== oldId) {\r\n  this.initializePerfumeInfo();\r\n  }\r\n  }\r\n\r\n  handlePage = (selectedPage) => {\r\n  const { history, PerfumeActions } = this.props;\r\n  const queryParams = queryString.parse(history.location.search);\r\n  queryParams.page = selectedPage;\r\n  PerfumeActions.getPerfumeInfo(queryParams);\r\n  };\r\n  handleGender = (selectedGender) => {\r\n  const { history, PerfumeActions } = this.props;\r\n  const queryParams = queryString.parse(history.location.search);\r\n  queryParams.gender = selectedGender;\r\n  window.history.pushState('', '', `/perfume?${queryString.stringify(queryParams)}`)\r\n  PerfumeActions.getPerfumeInfo(queryParams);\r\n  };\r\n  render() {\r\n  const { perfumes } = this.props;\r\n  const { GET_PERFUME_INFO } = this.props.pender;\r\n  const {\r\n  page,\r\n  sort,\r\n  brand,\r\n  category,\r\n  exclude,\r\n  include,\r\n  gender,\r\n  } = queryString.parse(window.location.search);\r\n  return (\r\n  <div className=\"cards_box\">\r\n    <div className=\"radio-search\">\r\n      <div className=\"radio-search-box\">\r\n        <Row className=\"row-margin\">\r\n          <Col>\r\n          <RadioGroup label=\"T-Shirt Size\" name=\"size\" options={[ { label: \"모두\" , value: \"all\" , }, { label: \"남성용\" ,\r\n            value: \"0\" , }, { label: \"여성용\" , value: \"1\" , }, { label: \"공용\" , value: \"2\" , }, ]} value={gender}\r\n            onChange={({ target: { value } })=> this.handleGender(value)}\r\n            withGap\r\n            />\r\n            </Col>\r\n        </Row>\r\n        <Row className=\"perfume_sort_row\">\r\n          <Col className=\"sort_btn\" >\r\n          {sort !== \"alpha\" ? (\r\n          <NavLink\r\n            to={`/perfume?page=1&sort=alpha&brand=${brand}&category=${category}&exclude=${exclude}&include=${include}&gender=${gender}`}>\r\n            사전순\r\n          </NavLink>\r\n          ) : (\r\n          <NavLink to=\"#\" className=\"disabled-link\">\r\n            사전순\r\n          </NavLink>\r\n          )}\r\n          </Col>\r\n          <Col className=\"sort_btn\" >\r\n          {sort !== \"rate\" ? (\r\n          <NavLink\r\n            to={`/perfume?page=1&sort=rate&brand=${brand}&category=${category}&exclude=${exclude}&include=${include}&gender=${gender}`}>\r\n            평점순\r\n          </NavLink>\r\n          ) : (\r\n          <NavLink to=\"#\" className=\"disabled-link\">\r\n            평점순\r\n          </NavLink>\r\n          )}\r\n          </Col>\r\n          <Col className=\"sort_btn\">\r\n          {sort !== \"reviewcnt\" ? (\r\n          <NavLink\r\n            to={`/perfume?page=1&sort=reviewcnt&brand=${brand}&category=${category}&exclude=${exclude}&include=${include}&gender=${gender}`}>\r\n            리뷰순\r\n          </NavLink>\r\n          ) : (\r\n          <NavLink to=\"#\" className=\"disabled-link\">\r\n            리뷰순\r\n          </NavLink>\r\n          )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n    <div className=\"perfume-topheader\">\r\n      <div className=\"pagenation-container\">\r\n        <Pagination activePage={Number(page)} items={this.props.num_pages < 20 ? this.props.num_pages : 20}\r\n          leftBtn={<Icon>chevron_left</Icon>}\r\n          rightBtn={<Icon>chevron_right</Icon>}\r\n          onSelect={this.handlePage}\r\n          maxButtons={10}\r\n          />\r\n      </div>\r\n    </div>\r\n    <Row className=\"wrap\">\r\n      {GET_PERFUME_INFO !== true ? (\r\n      perfumes.map((perfume) => (\r\n      <Col s={12} m={6} l={4} xl={3} key={perfume.id}>\r\n      <Cards field={perfume} />\r\n      </Col>\r\n      ))\r\n      ) : (\r\n      <Col s={12} className=\"center\">\r\n      <Preloader active color=\"blue\" flashing={false} size=\"big\" />\r\n      </Col>\r\n      )}\r\n    </Row>\r\n  </div>\r\n  );\r\n  }\r\n  }\r\n\r\n  export default connect(\r\n  (state) => ({\r\n  perfumes: state.perfume.get(\"perfumesList\"),\r\n  num_pages: state.perfume.get(\"num_pages\"),\r\n  pender: state.pender.pending,\r\n  }),\r\n  (dispatch) => ({\r\n  PerfumeActions: bindActionCreators(perfumeActions, dispatch),\r\n  })\r\n  )(Perfumes);","import React from 'react'\r\nimport { Header } from '../components'\r\nimport { Perfumes } from 'containers/Perfumes'\r\nimport '../css/HomePage.css'\r\n\r\nfunction PerfumePage(history) {\r\n  return (\r\n    <div className=\"bg\">\r\n      <Header />\r\n      <div className=\"container\">\r\n        <Perfumes history={history} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PerfumePage;\r\n","import React from 'react';\r\nimport { Header, Date, Categories } from '../components'\r\nimport { Switch, Checkbox, Chip, Icon } from 'react-materialize';\r\nimport { Button } from 'react-materialize';\r\nimport { Link } from 'react-router-dom'\r\nimport '../css/SurveyPage.css'\r\n\r\nfunction SurveyPage () {\r\nreturn (\r\n<div className=\"bg\">\r\n  <Header />\r\n\r\n  <div className=\"survey_box\">\r\n    <div className=\"title\">Survey\r\n    </div>\r\n    <div className=\"content\">\r\n      {/* age */}\r\n      <div className=\"titles\">\r\n        AGE\r\n      </div>\r\n      <div className=\"age_\">\r\n        <Date />\r\n      </div>\r\n\r\n      {/* gender */}\r\n      <div className=\"titles\">\r\n        GENDER\r\n      </div>\r\n      <div className=\"gender_\">\r\n        <div className=\"male_fe\">\r\n          <div className=\"gender_text\">\r\n            <div className=\"gender_1\">M</div>ale\r\n          </div>\r\n          <Switch id=\"Switch-11\" offLabel=\"Off\" onChange={function noRefCheck(){}} onLabel=\"On\" />\r\n          <div className=\"gender_text\">\r\n            <div className=\"gender_2\">Fe</div>male\r\n          </div>\r\n        </div>\r\n        <div className=\"none_gender\">\r\n          <Checkbox id=\"None\" label=\"None\" value=\"None\" />\r\n        </div>\r\n      </div>\r\n\r\n      {/* season */}\r\n      <div className=\"titles\">\r\n        SEASON\r\n      </div>\r\n      <div className=\"sub_title\">\r\n        * 향수를 사용 할 계절을 선택해주세요.\r\n      </div>\r\n      <div className=\"season\">\r\n        <Checkbox id=\"Spring\" label=\"Spring\" value=\"Spring\" />\r\n        <Checkbox id=\"Summer\" label=\"Summer\" value=\"Summer\" />\r\n        <Checkbox id=\"Fall\" label=\"Fall\" value=\"Fall\" />\r\n        <Checkbox id=\"Winter\" label=\"Winter\" value=\"Winter\" />\r\n      </div>\r\n\r\n\r\n      {/* catecory */}\r\n      <div className=\"titles\">\r\n        CATECORY\r\n      </div>\r\n\r\n      {/* favorite category */}\r\n      <div className=\"sub_title\">\r\n        * 가장 선호하는 카테고리를 선택해주세요.\r\n      </div>\r\n      {/* search bar 같은 기능으로 데이터 검색이 되면 편리할 것 같다. */}\r\n      {/* 잘 모르는 사람들을 위해 인기 많은 카테고리들을 나열해도 될 것 같다. */}\r\n      <Categories />\r\n      <div className=\"rem\"></div>\r\n\r\n      {/* 3 Note in selected category */}\r\n      <div className=\"sub_title\">\r\n        * 선택한 카테고리 내에 마음에드는 노트를 3가지 이상 선택해주세요.\r\n      </div>\r\n      {/* 상당히 많은 수의 노트가 있을 경우, overflow scroll을 이용해도 될 것 같다. */}\r\n      <div className=\"season\">\r\n        <Checkbox filledIn id=\"Acacia\" label=\"Acacia\" value=\"Acacia\" />\r\n        <Checkbox filledIn id=\"Rose\" label=\"Rose\" value=\"Rose\" />\r\n        <Checkbox filledIn id=\"Blossom\" label=\"Blossom\" value=\"Blossom\" />\r\n        <Checkbox filledIn id=\"Chamomile\" label=\"Chamomile\" value=\"Chamomile\" />\r\n        <Checkbox filledIn id=\"Cotton\" label=\"Cotton\" value=\"Cotton\" />\r\n        <Checkbox filledIn id=\"Freesia\" label=\"Freesia\" value=\"Freesia\" />\r\n        <Checkbox filledIn id=\"Hyssop\" label=\"Hyssop\" value=\"Hyssop\" />\r\n        <Checkbox filledIn id=\"Iris\" label=\"Iris\" value=\"Iris\" />\r\n        <Checkbox filledIn id=\"Lilac\" label=\"Lilac\" value=\"Lilac\" />\r\n      </div>\r\n      <div className=\"tags\">\r\n        {/*\r\n        <NoteTags /> */}\r\n      </div>\r\n      <div className=\"rem\"></div>\r\n      <div className=\"rem\"></div>\r\n\r\n      {/* Dislike category */}\r\n      <div className=\"sub_title\">\r\n        * 기피하고 싶은 카테고리를 선택해주세요. (0~2개)\r\n      </div>\r\n      <Categories />\r\n      <div className=\"hate_cate\">\r\n        <Chip close closeIcon={<Icon className=\"close\">close</Icon>}\r\n          options={null}\r\n          >\r\n          Animalic\r\n        </Chip>\r\n        <Chip close closeIcon={<Icon className=\"close\">close</Icon>}\r\n          options={null}\r\n          >\r\n          Beverages\r\n        </Chip>\r\n      </div>\r\n      <div className=\"rem\"></div>\r\n\r\n    </div>\r\n\r\n    <div className=\"submit_survey\">\r\n      <Link to=\"/\">\r\n      <Button>SUBMIT</Button>\r\n      </Link>\r\n    </div>\r\n  </div>\r\n</div>\r\n)\r\n}\r\n\r\nexport default SurveyPage;","import React from 'react'\r\nimport { Header } from '../components'\r\nimport { Pagination, Icon, Table } from 'react-materialize'\r\nimport '../css/UserRank.css'\r\n\r\nfunction UserRank () {\r\nreturn (\r\n<div className=\"bg-detail\">\r\n  <Header />\r\n  <div className=\"center user_r\">\r\n    <h1>User Page</h1>\r\n    <div className=\"admin_box\">\r\n      <div className=\"admins\">\r\n        <Table centered striped>\r\n          <thead>\r\n            <tr>\r\n              <th data-field=\"grade\">  \r\n                Management level\r\n              </th>\r\n              <th data-field=\"user\">\r\n                Name\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <div className=\"bedge\">\r\n                  <img\r\n                    src=\"https://user-images.githubusercontent.com/52684457/79992592-aabfc980-84ee-11ea-8cdf-38f19f9d7305.png\"\r\n                    alt=\"\" />\r\n                  <div className=\"admin_bedge\">\r\n                    Admin\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                이경호\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <div className=\"bedge\">\r\n                  <img\r\n                    src=\"https://user-images.githubusercontent.com/52684457/79992597-abf0f680-84ee-11ea-956b-6d22c0eb09b7.png\"\r\n                    alt=\"\" />\r\n                  <div className=\"staff_bedge\">\r\n                    Staff\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                양혜진\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <div className=\"bedge\">\r\n                  <img\r\n                    src=\"https://user-images.githubusercontent.com/52684457/79992597-abf0f680-84ee-11ea-956b-6d22c0eb09b7.png\"\r\n                    alt=\"\" />\r\n                  <div className=\"staff_bedge\">\r\n                    Staff\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                박홍은\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <div className=\"bedge\">\r\n                  <img\r\n                    src=\"https://user-images.githubusercontent.com/52684457/79992597-abf0f680-84ee-11ea-956b-6d22c0eb09b7.png\"\r\n                    alt=\"\" />\r\n                  <div className=\"staff_bedge\">\r\n                    Staff\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                이해인\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <div className=\"bedge\">\r\n                  <img\r\n                    src=\"https://user-images.githubusercontent.com/52684457/79992597-abf0f680-84ee-11ea-956b-6d22c0eb09b7.png\"\r\n                    alt=\"\" />\r\n                  <div className=\"staff_bedge\">\r\n                    Staff\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td>\r\n                남승현\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n    <div className=\"rank_box\">\r\n      <div className=\"user_rank\">\r\n        <Table centered hoverable>\r\n          <thead>\r\n            <tr>\r\n              <th data-field=\"rank\">\r\n                Rank\r\n              </th>\r\n              <th data-field=\"user\">\r\n                User\r\n              </th>\r\n              <th data-field=\"grade\">\r\n                Grade\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                1\r\n              </td>\r\n              <td>\r\n                이경호\r\n              </td>\r\n              <td>\r\n                <div className=\"bedge\">\r\n                  <img\r\n                    src=\"https://user-images.githubusercontent.com/52684457/79992607-adbaba00-84ee-11ea-98c4-5f844400a294.png\"\r\n                    alt=\"\" />\r\n                  <div className=\"top_bedge\">\r\n                    Top Flower\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                2\r\n              </td>\r\n              <td>\r\n                양혜진\r\n              </td>\r\n              <td>\r\n                <div className=\"bedge\">\r\n                  <img\r\n                    src=\"https://user-images.githubusercontent.com/52684457/79992607-adbaba00-84ee-11ea-98c4-5f844400a294.png\"\r\n                    alt=\"\" />\r\n                  <div className=\"top_bedge\">\r\n                    Top Flower\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                3\r\n              </td>\r\n              <td>\r\n                박홍은\r\n              </td>\r\n              <td>\r\n                <div className=\"bedge\">\r\n                  <img\r\n                    src=\"https://user-images.githubusercontent.com/52684457/79992607-adbaba00-84ee-11ea-98c4-5f844400a294.png\"\r\n                    alt=\"\" />\r\n                  <div className=\"top_bedge\">\r\n                    Top Flower\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                4\r\n              </td>\r\n              <td>\r\n                이해인\r\n              </td>\r\n              <td>\r\n                <div className=\"bedge\">\r\n                  <img\r\n                    src=\"https://user-images.githubusercontent.com/52684457/79992606-adbaba00-84ee-11ea-9669-d75c690f4066.png\"\r\n                    alt=\"\" />\r\n                  <div className=\"flower_bedge\">\r\n                    Flower\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                5\r\n              </td>\r\n              <td>\r\n                남승현\r\n              </td>\r\n              <td>\r\n                <div className=\"bedge\">\r\n                  <img\r\n                    src=\"https://user-images.githubusercontent.com/52684457/79992606-adbaba00-84ee-11ea-9669-d75c690f4066.png\"\r\n                    alt=\"\" />\r\n                  <div className=\"flower_bedge\">\r\n                    Flower\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                6\r\n              </td>\r\n              <td>\r\n                몽땅\r\n              </td>\r\n              <td>\r\n                <div className=\"bedge\">\r\n                  <img\r\n                    src=\"https://user-images.githubusercontent.com/52684457/79992604-ad222380-84ee-11ea-8029-15226d41ed43.png\"\r\n                    alt=\"\" />\r\n                  <div className=\"flowerBud_bedge\">\r\n                    Flower bud\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                7\r\n              </td>\r\n              <td>\r\n                홍시\r\n              </td>\r\n              <td>\r\n                <div className=\"bedge\">\r\n                  <img\r\n                    src=\"https://user-images.githubusercontent.com/52684457/79992604-ad222380-84ee-11ea-8029-15226d41ed43.png\"\r\n                    alt=\"\" />\r\n                  <div className=\"flowerBud_bedge\">\r\n                    Flower bud\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                8\r\n              </td>\r\n              <td>\r\n                야통이\r\n              </td>\r\n              <td>\r\n                <div className=\"bedge\">\r\n                  <img\r\n                    src=\"https://user-images.githubusercontent.com/52684457/79992604-ad222380-84ee-11ea-8029-15226d41ed43.png\"\r\n                    alt=\"\" />\r\n                  <div className=\"flowerBud_bedge\">\r\n                    Flower bud\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                9\r\n              </td>\r\n              <td>\r\n                뜌뤼\r\n              </td>\r\n              <td>\r\n                <div className=\"bedge\">\r\n                  <img\r\n                    src=\"https://user-images.githubusercontent.com/52684457/79992601-ac898d00-84ee-11ea-8cac-af6b8541fe25.png\"\r\n                    alt=\"\" />\r\n                  <div className=\"bud_bedge\">\r\n                    Bud\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                10\r\n              </td>\r\n              <td>\r\n                얌얌긋\r\n              </td>\r\n              <td>\r\n                <div className=\"bedge\">\r\n                  <img\r\n                    src=\"https://user-images.githubusercontent.com/52684457/79992598-ac898d00-84ee-11ea-94e4-13e79be2b8e4.png\"\r\n                    alt=\"\" />\r\n                  <div className=\"sprout_bedge\">\r\n                    Sprout\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      <Pagination activePage={1} items={10} leftBtn={<Icon>chevron_left</Icon>}\r\n        maxButtons={8}\r\n        rightBtn={<Icon>chevron_right</Icon>}\r\n        />\r\n    </div>\r\n  </div>\r\n</div>\r\n);\r\n}\r\n\r\nexport default UserRank;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { HomePage, AboutPage, LoginPage, TestPage, DetailPage, PerfumePage, SurveyPage, UserRank } from './pages'\r\nimport storage from 'lib/storage';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as userActions from 'redux/modules/user';\r\n\r\n\r\ninterface AppProps {\r\n  UserActions: any\r\n}\r\n\r\n\r\nclass App extends Component<AppProps> {\r\n  initializeUserInfo = async () => {\r\n    const loggedInfo = storage.get('loggedInfo'); // 로그인 정보를 로컬스토리지에서 가져옵니다.\r\n    if (!loggedInfo) return; // 로그인 정보가 없다면 여기서 멈춥니다.\r\n\r\n    const { UserActions } = this.props;\r\n    UserActions.setLoggedInfo(loggedInfo);\r\n    try {\r\n      await UserActions.checkStatus();\r\n    } catch (e) {\r\n      storage.remove('loggedInfo');\r\n      window.location.href = '/auth/login?expired';\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initializeUserInfo();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Route exact path=\"/\" component={HomePage} />\r\n        <Route exact path=\"/about\" component={AboutPage} />\r\n        <Route exact path=\"/test\" component={TestPage} />\r\n        <Route path=\"/perfume/\" component={PerfumePage} />\r\n        <Route path=\"/auth\" component={LoginPage} />\r\n        <Route path=\"/detail\" component={DetailPage} />\r\n        <Route path=\"/survey\" component={SurveyPage} />\r\n        <Route path=\"/rank\" component={UserRank} />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  (dispatch) => ({\r\n    UserActions: bindActionCreators(userActions, dispatch)\r\n  })\r\n)(App);","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst Root = ({store}) => {\r\n    return (\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <Route path=\"/\" component={App}/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport base from './base';\r\nimport auth from './auth';\r\nimport user from './user';\r\nimport perfume from './perfume'\r\nimport detail from './detail'\r\nimport review from './review'\r\nimport { penderReducer } from 'redux-pender';\r\n\r\nexport default combineReducers({\r\n    base,\r\n    auth,\r\n    user,\r\n    perfume,\r\n    detail,\r\n    review,\r\n    pender: penderReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './css/materialize.min.css'\r\nimport Root from './Root';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport configureStore from 'redux/configureStore';\r\n\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root store={store}/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport modules from './modules';\r\nimport penderMiddleware from 'redux-pender';\r\n\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(modules, composeWithDevTools(\r\n    applyMiddleware(penderMiddleware())\r\n  ));\r\n  return store;\r\n}\r\n\r\nexport default configureStore;"],"sourceRoot":""}